{
    "project": {
        "name": "Docs",
        "description": "Docs"
    },
    "files": {
        "..\\..\\CustomElements\\src\\CustomElements.js": {
            "name": "..\\..\\CustomElements\\src\\CustomElements.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\MutationObservers\\MutationObserver.js": {
            "name": "..\\..\\MutationObservers\\MutationObserver.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\NewTemplate\\untitled.html": {
            "name": "..\\..\\NewTemplate\\untitled.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\NodeBind\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\NodeBind\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerEvents\\src\\PointerEvent.js": {
            "name": "..\\..\\PointerEvents\\src\\PointerEvent.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerEvents\\src\\dispatcher.js": {
            "name": "..\\..\\PointerEvents\\src\\dispatcher.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerEvents\\src\\installer.js": {
            "name": "..\\..\\PointerEvents\\src\\installer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerEvents\\src\\platform-events.js": {
            "name": "..\\..\\PointerEvents\\src\\platform-events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerEvents\\src\\pointermap.js": {
            "name": "..\\..\\PointerEvents\\src\\pointermap.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerEvents\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\PointerEvents\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\src\\PointerGestureEvent.js": {
            "name": "..\\..\\PointerGestures\\src\\PointerGestureEvent.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\src\\dispatcher.js": {
            "name": "..\\..\\PointerGestures\\src\\dispatcher.js",
            "modules": {},
            "classes": {},
            "fors": {
                "PointerGestures": 1
            },
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\src\\flick.js": {
            "name": "..\\..\\PointerGestures\\src\\flick.js",
            "modules": {
                "Events": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\src\\hold.js": {
            "name": "..\\..\\PointerGestures\\src\\hold.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\src\\initialize.js": {
            "name": "..\\..\\PointerGestures\\src\\initialize.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\src\\tap.js": {
            "name": "..\\..\\PointerGestures\\src\\tap.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\src\\track.js": {
            "name": "..\\..\\PointerGestures\\src\\track.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\PointerGestures\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\PointerGestures\\pointergestures.js": {
            "name": "..\\..\\PointerGestures\\pointergestures.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\ShadowDOM\\src\\wrappers\\Element.js": {
            "name": "..\\..\\ShadowDOM\\src\\wrappers\\Element.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\ShadowDOM\\src\\wrappers\\Node.js": {
            "name": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\ShadowDOM\\src\\wrappers\\events.js": {
            "name": "..\\..\\ShadowDOM\\src\\wrappers\\events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\ShadowDOM\\src\\ShadowRenderer.js": {
            "name": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\ShadowDOM\\src\\wrappers.js": {
            "name": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\ShadowDOM\\test\\js\\events.js": {
            "name": "..\\..\\ShadowDOM\\test\\js\\events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\ShadowDOM\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\ShadowDOM\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\TemplateBinding\\src\\TemplateBinding.js": {
            "name": "..\\..\\TemplateBinding\\src\\TemplateBinding.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\TemplateBinding\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\TemplateBinding\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\Untitled\\untitled.html": {
            "name": "..\\..\\Untitled\\untitled.html",
            "modules": {
                "Untitled Elements": 1
            },
            "classes": {
                "untitled-element": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\effects.js": {
            "name": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\effects.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js": {
            "name": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\observe-js\\src\\observe.js": {
            "name": "..\\..\\observe-js\\src\\observe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\observe-js\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\observe-js\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\platform\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\platform\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\platform\\workbench\\ShadowDOM\\event-path.html": {
            "name": "..\\..\\platform\\workbench\\ShadowDOM\\event-path.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\platform\\platform.concat.js": {
            "name": "..\\..\\platform\\platform.concat.js",
            "modules": {},
            "classes": {},
            "fors": {
                "PointerGestures": 1
            },
            "namespaces": {}
        },
        "..\\..\\polymer-ajax\\polymer-ajax.html": {
            "name": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "modules": {},
            "classes": {
                "polymer-ajax": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ajax\\polymer-xhr.html": {
            "name": "..\\..\\polymer-ajax\\polymer-xhr.html",
            "modules": {},
            "classes": {
                "polymer-xhr": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-anchor-point\\polymer-anchor-point.html": {
            "name": "..\\..\\polymer-anchor-point\\polymer-anchor-point.html",
            "modules": {},
            "classes": {
                "polymer-anchor-point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-animation\\polymer-animation-group.html": {
            "name": "..\\..\\polymer-animation\\polymer-animation-group.html",
            "modules": {
                "Animation": 1
            },
            "classes": {
                "polymer-animation-group": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-animation\\polymer-animation-keyframe.html": {
            "name": "..\\..\\polymer-animation\\polymer-animation-keyframe.html",
            "modules": {},
            "classes": {
                "polymer-animation-keyframe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-animation\\polymer-animation-prop.html": {
            "name": "..\\..\\polymer-animation\\polymer-animation-prop.html",
            "modules": {},
            "classes": {
                "polymer-animation-prop": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-animation\\polymer-animation.html": {
            "name": "..\\..\\polymer-animation\\polymer-animation.html",
            "modules": {},
            "classes": {
                "polymer-animation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-collapse\\polymer-collapse.html": {
            "name": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "modules": {},
            "classes": {
                "polymer-collapse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-dev\\src\\declaration\\styles.js": {
            "name": "..\\..\\polymer-dev\\src\\declaration\\styles.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-dev\\src\\instance\\styles.js": {
            "name": "..\\..\\polymer-dev\\src\\instance\\styles.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-dev\\src\\instance\\utils.js": {
            "name": "..\\..\\polymer-dev\\src\\instance\\utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-dev\\polymer.concat.js": {
            "name": "..\\..\\polymer-dev\\polymer.concat.js",
            "modules": {
                "CustomElements": 1,
                "PointerGestures": 1
            },
            "classes": {
                "Document": 1,
                "PointerGestureEvent": 1,
                "PointerGestures": 1,
                "flick": 1,
                "hold": 1,
                "holdpulse": 1,
                "released": 1,
                "tap": 1,
                "trackstart": 1,
                "track": 1,
                "trackend": 1
            },
            "fors": {
                "PointerGestures": 1
            },
            "namespaces": {}
        },
        "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html": {
            "name": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-expressions\\src\\polymer-expressions.js": {
            "name": "..\\..\\polymer-expressions\\src\\polymer-expressions.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-expressions\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\polymer-expressions\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-file\\polymer-file.html": {
            "name": "..\\..\\polymer-file\\polymer-file.html",
            "modules": {},
            "classes": {
                "polymer-file": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-flex-layout\\polymer-flex-layout.html": {
            "name": "..\\..\\polymer-flex-layout\\polymer-flex-layout.html",
            "modules": {},
            "classes": {
                "polymer-flex-layout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-jsonp\\polymer-jsonp.html": {
            "name": "..\\..\\polymer-jsonp\\polymer-jsonp.html",
            "modules": {},
            "classes": {
                "polymer-jsonp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-layout\\polymer-layout.html": {
            "name": "..\\..\\polymer-layout\\polymer-layout.html",
            "modules": {},
            "classes": {
                "polymer-layout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-localstorage\\polymer-localstorage.html": {
            "name": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "modules": {},
            "classes": {
                "polymer-localstorage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-media-query\\polymer-media-query.html": {
            "name": "..\\..\\polymer-media-query\\polymer-media-query.html",
            "modules": {},
            "classes": {
                "polymer-media-query": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-meta\\polymer-meta.html": {
            "name": "..\\..\\polymer-meta\\polymer-meta.html",
            "modules": {},
            "classes": {
                "polymer-meta": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-overlay\\polymer-overlay.html": {
            "name": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "modules": {},
            "classes": {
                "polymer-overlay": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-scrub\\polymer-scrub.html": {
            "name": "..\\..\\polymer-scrub\\polymer-scrub.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-selection\\polymer-selection.html": {
            "name": "..\\..\\polymer-selection\\polymer-selection.html",
            "modules": {},
            "classes": {
                "polymer-selection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-selector\\polymer-selector.html": {
            "name": "..\\..\\polymer-selector\\polymer-selector.html",
            "modules": {},
            "classes": {
                "polymer-selector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-accordion\\polymer-ui-accordion.html": {
            "name": "..\\..\\polymer-ui-accordion\\polymer-ui-accordion.html",
            "modules": {},
            "classes": {
                "polymer-ui-accordion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-animated-pages\\polymer-ui-animated-pages.html": {
            "name": "..\\..\\polymer-ui-animated-pages\\polymer-ui-animated-pages.html",
            "modules": {},
            "classes": {
                "polymer-ui-animated-pages": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html": {
            "name": "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "modules": {},
            "classes": {
                "polymer-ui-arrow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html": {
            "name": "..\\..\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "modules": {},
            "classes": {
                "polymer-ui-breadcrumbs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-card\\polymer-ui-card.html": {
            "name": "..\\..\\polymer-ui-card\\polymer-ui-card.html",
            "modules": {},
            "classes": {
                "polymer-ui-card": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-collapsible\\polymer-ui-collapsible.html": {
            "name": "..\\..\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "modules": {},
            "classes": {
                "polymer-ui-collapsible": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-icon\\polymer-ui-icon.html": {
            "name": "..\\..\\polymer-ui-icon\\polymer-ui-icon.html",
            "modules": {},
            "classes": {
                "polymer-ui-icon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-icon-button\\metadata.html": {
            "name": "..\\..\\polymer-ui-icon-button\\metadata.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-icon-button\\polymer-ui-icon-button.html": {
            "name": "..\\..\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "modules": {},
            "classes": {
                "polymer-ui-icon-button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-menu\\polymer-ui-menu.html": {
            "name": "..\\..\\polymer-ui-menu\\polymer-ui-menu.html",
            "modules": {},
            "classes": {
                "polymer-ui-menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html": {
            "name": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "modules": {
                "Polymer Elements": 1
            },
            "classes": {
                "polymer-ui-menu-button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-menu-item\\polymer-ui-menu-item.html": {
            "name": "..\\..\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "modules": {
                "Polymer UI Elements": 1
            },
            "classes": {
                "polymer-ui-menu-item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html": {
            "name": "..\\..\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html",
            "modules": {},
            "classes": {
                "polymer-ui-nav-arrow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-pages\\polymer-ui-pages.html": {
            "name": "..\\..\\polymer-ui-pages\\polymer-ui-pages.html",
            "modules": {},
            "classes": {
                "polymer-ui-pages": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-ratings\\polymer-ui-ratings.html": {
            "name": "..\\..\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "modules": {},
            "classes": {
                "polymer-ui-ratings": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-scaffold\\polymer-ui-scaffold.html": {
            "name": "..\\..\\polymer-ui-scaffold\\polymer-ui-scaffold.html",
            "modules": {},
            "classes": {
                "polymer-ui-scaffold": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-sidebar\\polymer-ui-sidebar.html": {
            "name": "..\\..\\polymer-ui-sidebar\\polymer-ui-sidebar.html",
            "modules": {},
            "classes": {
                "polymer-ui-sidebar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html": {
            "name": "..\\..\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html",
            "modules": {},
            "classes": {
                "polymer-ui-sidebar-header": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-sidebar-menu\\polymer-ui-sidebar-menu.html": {
            "name": "..\\..\\polymer-ui-sidebar-menu\\polymer-ui-sidebar-menu.html",
            "modules": {},
            "classes": {
                "polymer-ui-sidebar-menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-splitter\\polymer-ui-splitter.html": {
            "name": "..\\..\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "modules": {},
            "classes": {
                "polymer-ui-splitter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-submenu-item\\polymer-ui-submenu-item.html": {
            "name": "..\\..\\polymer-ui-submenu-item\\polymer-ui-submenu-item.html",
            "modules": {},
            "classes": {
                "polymer-ui-submenu-item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-tabs\\polymer-ui-tabs.html": {
            "name": "..\\..\\polymer-ui-tabs\\polymer-ui-tabs.html",
            "modules": {},
            "classes": {
                "polymer-ui-tabs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html": {
            "name": "..\\..\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "modules": {},
            "classes": {
                "polymer-ui-toggle-button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\polymer-ui-toolbar\\polymer-ui-toolbar.html": {
            "name": "..\\..\\polymer-ui-toolbar\\polymer-ui-toolbar.html",
            "modules": {},
            "classes": {
                "polymer-ui-toolbar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\..\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\..\\tools\\tasks\\override-chrome-launcher.js": {
            "name": "..\\..\\tools\\tasks\\override-chrome-launcher.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "CustomElements": {
            "name": "CustomElements",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 11109,
            "description": "Implements `document.register`"
        },
        "Untitled Elements": {
            "name": "Untitled Elements",
            "submodules": {},
            "classes": {
                "untitled-element": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\..\\Untitled\\untitled.html",
            "line": 13,
            "description": "Untitled Elements"
        },
        "PointerGestures": {
            "name": "PointerGestures",
            "submodules": {
                "undefined": 1,
                "Events": 1
            },
            "classes": {
                "Document": 1,
                "PointerGestureEvent": 1,
                "PointerGestures": 1,
                "flick": 1,
                "hold": 1,
                "holdpulse": 1,
                "released": 1,
                "tap": 1,
                "trackstart": 1,
                "track": 1,
                "trackend": 1
            },
            "fors": {
                "PointerGestures": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13658,
            "description": "PointerGestureEvent is the constructor for all PointerGesture events.",
            "extends": "UIEvent",
            "is_constructor": 1,
            "params": [
                {
                    "name": "inType",
                    "description": "Event type",
                    "type": "String"
                },
                {
                    "name": "inDict",
                    "description": "Dictionary of properties to initialize on the event",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Events": {
            "name": "Events",
            "submodules": {},
            "classes": {
                "PointerGestures": 1,
                "flick": 1,
                "hold": 1,
                "holdpulse": 1,
                "released": 1,
                "tap": 1,
                "trackstart": 1,
                "track": 1,
                "trackend": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "PointerGestures",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13658,
            "description": "This event denotes a rapid down/move/up sequence from a pointer.\n\nThe event is sent to the first element the pointer went down on."
        },
        "Polymer Elements": {
            "name": "Polymer Elements",
            "submodules": {},
            "classes": {
                "polymer-ajax": 1,
                "polymer-xhr": 1,
                "polymer-anchor-point": 1,
                "polymer-collapse": 1,
                "polymer-selector": 1,
                "polymer-file": 1,
                "polymer-flex-layout": 1,
                "polymer-jsonp": 1,
                "polymer-layout": 1,
                "polymer-localstorage": 1,
                "polymer-media-query": 1,
                "polymer-meta": 1,
                "polymer-overlay": 1,
                "polymer-selection": 1,
                "polymer-ui-menu-button": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 10
        },
        "Animation": {
            "name": "Animation",
            "submodules": {},
            "classes": {
                "polymer-animation-group": 1,
                "polymer-animation-keyframe": 1,
                "polymer-animation-prop": 1,
                "polymer-animation": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 31,
            "itemtype": "main",
            "example": [
                " toolkitchen/labs/animation2/grid-fade.html",
                " toolkitchen/labs/animation2/group.html"
            ]
        },
        "Polymer UI Elements": {
            "name": "Polymer UI Elements",
            "submodules": {},
            "classes": {
                "polymer-ui-accordion": 1,
                "polymer-ui-animated-pages": 1,
                "polymer-ui-arrow": 1,
                "polymer-ui-breadcrumbs": 1,
                "polymer-ui-card": 1,
                "polymer-ui-collapsible": 1,
                "polymer-ui-icon": 1,
                "polymer-ui-icon-button": 1,
                "polymer-ui-menu": 1,
                "polymer-ui-menu-item": 1,
                "polymer-ui-nav-arrow": 1,
                "polymer-ui-pages": 1,
                "polymer-ui-ratings": 1,
                "polymer-ui-scaffold": 1,
                "polymer-ui-sidebar": 1,
                "polymer-ui-sidebar-header": 1,
                "polymer-ui-sidebar-menu": 1,
                "polymer-ui-splitter": 1,
                "polymer-ui-submenu-item": 1,
                "polymer-ui-tabs": 1,
                "polymer-ui-toggle-button": 1,
                "polymer-ui-toolbar": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\..\\polymer-ui-toolbar\\polymer-ui-toolbar.html",
            "line": 11
        }
    },
    "classes": {
        "Document": {
            "name": "Document",
            "shortname": "Document",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 11114,
            "description": "Polyfilled extensions to the `document` object."
        },
        "untitled-element": {
            "name": "untitled-element",
            "shortname": "untitled-element",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Untitled Elements",
            "namespace": "",
            "file": "..\\..\\Untitled\\untitled.html",
            "line": 13,
            "description": "Untitled.\n\nExample:\n\n    <untitled-element></untitled-element>"
        },
        "PointerGestureEvent": {
            "name": "PointerGestureEvent",
            "shortname": "PointerGestureEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13044,
            "description": "PointerGestureEvent is the constructor for all PointerGesture events."
        },
        "PointerGestures": {
            "name": "PointerGestures",
            "shortname": "PointerGestures",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13093,
            "description": "This class contains the gesture recognizers that create the PointerGesture\nevents.",
            "static": 1,
            "submodule": "Events"
        },
        "flick": {
            "name": "flick",
            "shortname": "flick",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13775,
            "description": "This event denotes a rapid down/move/up sequence from a pointer.\n\nThe event is sent to the first element the pointer went down on."
        },
        "hold": {
            "name": "hold",
            "shortname": "hold",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13462,
            "description": "This event is fired when a pointer is held down for 200ms."
        },
        "holdpulse": {
            "name": "holdpulse",
            "shortname": "holdpulse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13479,
            "description": "This event is fired every 200ms while a pointer is held down.",
            "extends": "hold"
        },
        "released": {
            "name": "released",
            "shortname": "released",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13485,
            "description": "This event is fired when a held pointer is released or moved."
        },
        "tap": {
            "name": "tap",
            "shortname": "tap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13905,
            "description": "This event is fired when a pointer quickly goes down and up, and is used to\ndenote activation.\n\nAny gesture event can prevent the tap event from being created by calling\n`event.preventTap`.\n\nAny pointer event can prevent the tap by setting the `tapPrevented` property\non itself."
        },
        "trackstart": {
            "name": "trackstart",
            "shortname": "trackstart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13574,
            "description": "This event denotes the beginning of a series of tracking events."
        },
        "track": {
            "name": "track",
            "shortname": "track",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13651,
            "description": "This event fires for all pointer movement being tracked.",
            "extends": "trackstart"
        },
        "trackend": {
            "name": "trackend",
            "shortname": "trackend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PointerGestures",
            "submodule": "Events",
            "namespace": "",
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13658,
            "description": "This event fires when the pointer is no longer being tracked.",
            "extends": "trackstart"
        },
        "polymer-ajax": {
            "name": "polymer-ajax",
            "shortname": "polymer-ajax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 10,
            "description": "polymer-ajax can be used to perform XMLHttpRequests.\n\nExample:\n\n    <polymer-ajax auto url=\"http://gdata.youtube.com/feeds/api/videos/\" \n        params='{\"alt\":\"json\", \"q\":\"chrome\"}'\n        handleAs=\"json\"\n        on-polymer-response=\"{{handleResponse}}\">\n    </polymer-ajax>"
        },
        "polymer-xhr": {
            "name": "polymer-xhr",
            "shortname": "polymer-xhr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ajax\\polymer-xhr.html",
            "line": 10,
            "description": "polymer-xhr can be used to perform XMLHttpRequests.\n\nExample:\n\n    <polymer-xhr id=\"xhr\"></polymer-xhr>\n    ...\n    this.$.xhr.request({url: url, params: params, callback: callback});"
        },
        "polymer-anchor-point": {
            "name": "polymer-anchor-point",
            "shortname": "polymer-anchor-point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-anchor-point\\polymer-anchor-point.html",
            "line": 5,
            "description": "polymer-anchor-point can be used to align two nodes. The node to\nuse as the reference position is the anchor node, and the node to\nbe positioned is the target node.\n\nBoth the anchor and target nodes should have an anchor-point\nattribute. The target node is positioned such that its anchor-point\naligns with the anchor node's anchor-point.\n\nNote: The target node is positioned with position: fixed, and will not\nscroll with the page.\n\nNote: This is meant to polyfill the `<dialog>` positioning behavior when\nan anchor is provided. Spec: http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#the-dialog-element\n\nExample:\n\n    <div id=\"anchor\" anchor-point=\"bottom left\"></div>\n    <div id=\"target\" anchor-point=\"top left\"></div>\n    <polymer-anchor-point id=\"anchor-helper\"></polymer-anchor-point>\n    <script>\n      var helper = document.querySelector('#anchor-helper');\n      helper.anchor = document.querySelector('#anchor');\n      helper.target = document.querySelector('#target');\n      helper.apply();\n    </script>"
        },
        "polymer-animation-group": {
            "name": "polymer-animation-group",
            "shortname": "polymer-animation-group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\..\\polymer-animation\\polymer-animation-group.html",
            "line": 12,
            "description": "Component for a group of animations."
        },
        "polymer-animation-keyframe": {
            "name": "polymer-animation-keyframe",
            "shortname": "polymer-animation-keyframe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\..\\polymer-animation\\polymer-animation-keyframe.html",
            "line": 3,
            "description": "Defines a keyframe in an animation. Its children should be\n`<polymer-animation-prop>` elements specifying the css\nproperty value at the keyframe."
        },
        "polymer-animation-prop": {
            "name": "polymer-animation-prop",
            "shortname": "polymer-animation-prop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\..\\polymer-animation\\polymer-animation-prop.html",
            "line": 3,
            "description": "A CSS property and value to use in a `<polymer-animation-keyframe>`."
        },
        "polymer-animation": {
            "name": "polymer-animation",
            "shortname": "polymer-animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 31,
            "description": "Component for a single animation.\n\nA animation component to fade out an element:\n\n    <polymer-animation id=\"fadeout\">\n      <polymer-animation-keyframe offset=\"0\">\n        <polymer-animation-prop name=\"opacity\" value=\"0\">\n        </polymer-animation-keyframe>\n      </polymer-animation-keyframe>\n      <polymer-animation-keyframe offset=\"1\">\n        <polymer-animation-prop name=\"opacity\" value=\"1\">\n        <polymer-animation-prop>\n      </polymer-animation-keyframe>\n    </polymer-animation>"
        },
        "polymer-collapse": {
            "name": "polymer-collapse",
            "shortname": "polymer-collapse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 10,
            "description": "polymer-collapse is used to add collapsible behavior to the\ntarget element.  It adjusts the height or width of the target element\nto make the element collapse and expand.\n\nExample:\n\n    <button on-click=\"{{toggle}}\">toggle collapse</button>\n    <div id=\"demo\">\n      ...\n    </div>\n    <polymer-collapse id=\"collapse\" targetId=\"demo\"></polymer-collapse>\n\n    ...\n\n    toggle: function() {\n      this.$.collapse.toggle();\n    }"
        },
        "polymer-selector": {
            "name": "polymer-selector",
            "shortname": "polymer-selector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 10,
            "description": "polymer-selector is used to manage a list of elements that can be selected.\nThe attribute \"selected\" indicates which item element is being selected.\nThe attribute \"multi\" indicates if multiple items can be selected at once.\nTapping on the item element would fire \"polymer-activate\" event. Use\n\"polymer-select\" event to listen for selection changes.\n\nExample:\n\n    <polymer-selector selected=\"0\">\n      <div>Item 1</div>\n      <div>Item 2</div>\n      <div>Item 3</div>\n    </polymer-selector>\n\npolymer-selector is not styled.  So one needs to use \"polymer-selected\" CSS\nclass to style the selected element.\n\n    <style>\n      .item.polymer-selected {\n        background: #eee;\n      }\n    </style>\n    ...\n    <polymer-selector>\n      <div class=\"item\">Item 1</div>\n      <div class=\"item\">Item 2</div>\n      <div class=\"item\">Item 3</div>\n    </polymer-selector>"
        },
        "polymer-file": {
            "name": "polymer-file",
            "shortname": "polymer-file",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-file\\polymer-file.html",
            "line": 12,
            "description": "polymer-file provides File API operations.\n\nExamples:\n\n    <polymer-file id=\"file\" readas=\"dataurl\" \n                  on-polymer-result=\"{{handleResult}}\"></polymer-file>\n    ...\n    this.$.file.blob = new Blob(['abc'], {type: 'text/plain'});\n    this.$.file.read();\n\n    ---\n\n    <polymer-file id=\"file\" readas=\"arraybuffer\" auto\n                  result=\"{{result}}\"></polymer-file>\n    ...\n    this.$.file.blob = new Blob(['abc'], {type: 'text/plain'});"
        },
        "polymer-flex-layout": {
            "name": "polymer-flex-layout",
            "shortname": "polymer-flex-layout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 10,
            "description": "polymer-flex-layout provides a helper to use CSS3 Flexible Boxes.  By putting\npolymer-flex-layout inside an element it makes the element a flex\ncontainer. Use 'flex' attribute to make the flex item flexible.\n\nExample:\n\n    <div>\n      <polymer-flex-layout></polymer-flex-layout>\n      <div>Left</div>\n      <div flex>Main</div>\n      <div>Right</div>\n    </div>\n\n    ---------------------------------\n    |-------------------------------|\n    ||Left|       Main       |Right||\n    |-------------------------------|\n    ---------------------------------\n\n    <div>\n      <polymer-flex-layout vertical></polymer-flex-layout>\n      <div>Header</div>\n      <div flex>Body</div>\n      <div>Footer</div>\n    </div>\n\n    ----------\n    ||------||\n    ||Header||\n    ||------||\n    ||Body  ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||------||\n    ||Footer||\n    ||------||\n    ----------"
        },
        "polymer-jsonp": {
            "name": "polymer-jsonp",
            "shortname": "polymer-jsonp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-jsonp\\polymer-jsonp.html",
            "line": 10,
            "description": "polymer-jsonp can be used to perform JSONP requests.\n\nExample:\n\n    <polymer-jsonp url=\"https://clients1.google.com/finance/info?q=GOOG&client=ig&callback=\"\n        response=\"{{data}}\"></polymer-jsonp>"
        },
        "polymer-layout": {
            "name": "polymer-layout",
            "shortname": "polymer-layout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-layout\\polymer-layout.html",
            "line": 10,
            "description": "`<polymer-layout>` arranges nodes horizontally via absolution positioning.\nSet the `vertical` attribute (boolean) to arrange vertically instead.\n\n`<polymer-layout>` arranges it's <b>sibling elements</b>, not\nit's children.\n\nOne arranged node may be marked as elastic by giving it a `flex`\nattribute (boolean).\n\nYou may remove a node from layout by giving it a `nolayout`\nattribute (boolean).\n\nCSS Notes:\n\n * `padding` is ignored on the parent node.\n * `margin` is ignored on arranged nodes.\n * `min-width` is ignored on arranged nodes, use `min-width` on the parent node\n   instead.\n\nExample: \n\nArrange three `div` into columns. `flex` attribute on Column Two makes that\ncolumn elastic.\n\n     <polymer-layout></polymer-layout>\n     <div>Column One</div>\n     <div flex>Column Two</div>\n     <div>Column Three</div>\n\n Remember that `<polymer-layout>` arranges it's sibling elements, not it's children.\n\nIf body has width 52 device pixels (in this case, ascii characters), call that 52px.\nColumn One has it's natural width of 12px (including border), Column Three has it's\nnatural width of 14px, body border uses 2px, and Column Two automatically uses the\nremaining space: 24px.\n\n     |-                    52px                        -| \n     ----------------------------------------------------\n     ||Column One||      Column Two      ||Column Three||\n     ----------------------------------------------------\n      |-  12px  -||-     (24px)         -||    14px   -|\n\nAs the parent node resizes, the elastic column reacts via CSS to adjust it's size.\nNo javascript is used during parent resizing, for best performance. \n\nChanges in content or sibling size is not handled automatically. \n\n     ----------------------------------------------------------------\n     ||Column One|             Column Two             |Column Three||\n     ----------------------------------------------------------------\n\n     --------------------------------------\n     ||Column One|Column Two|Column Three||\n     --------------------------------------\n\nArrange in rows by adding the `vertical` attribute.\n\nExample:\n\n     <polymer-layout vertical></polymer-layout>\n     <div>Row One</div>\n     <div flex>Row Two</div>\n     <div>Row Three</div>\n\nThis setup will cause Row Two to stretch to fill the container.\n\n     -----------             -----------\n     |---------|             |---------|\n     |         |             |         |\n     |Row One  |             |Row One  |\n     |         |             |         |\n     |---------|             |---------|\n     |         |             |         |\n     |Row Two  |             |Row Two  |\n     |         |             |         |\n     |---------|             |         |\n     |         |             |         |\n     |Row Three|             |         |\n     |         |             |---------|\n     |---------|             |         |\n     -----------             |Row Three|\n                             |         |\n                             |---------|\n                             |---------|\n\nLayouts can be nested arbitrarily.\n\n     <polymer-layout></polymer-layout>\n     <div>Menu</div>\n     <div flex>\n        <polymer-layout vertical></polymer-layout>\n        <div>Title</div>\n        <div>Toolbar</div>\n        <div flex>Main</div>\n        <div>Footer</div>\n     </div>\n\nRenders something like this\n\n     --------------------------------\n     ||Menu     ||Title            ||\n     ||         ||-----------------||\n     ||         ||Toolbar          ||\n     ||         ||-----------------||\n     ||         ||Main             ||\n     ||         ||                 ||\n     ||         ||-----------------||\n     ||         ||Footer           ||\n     --------------------------------"
        },
        "polymer-localstorage": {
            "name": "polymer-localstorage",
            "shortname": "polymer-localstorage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "line": 10,
            "description": "polymer-localstorage provides access to localStorage.  The \"name\" property\nis the key to the data (\"value\" property) stored in localStorage.\n\npolymer-localstorage automatically saves the value to localStorage when\nvalue is changed.  Note that if value is an object auto-save will be\ntriggered only when value is a different instance.\n\nExample:\n\n    <polymer-localstorage name=\"my-app-storage\" value=\"{{value}}\"></polymer-localstorage>"
        },
        "polymer-media-query": {
            "name": "polymer-media-query",
            "shortname": "polymer-media-query",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-media-query\\polymer-media-query.html",
            "line": 10,
            "description": "polymer-media-query can be used to data bind to a CSS media query.\nThe \"query\" property is a bare CSS media query.\nThe \"queryMatches\" property will be a boolean representing if the page matches that media query.\n\npolymer-media-query uses media query listeners to dynamically update the \"queryMatches\" property.\nA \"polymer-mediachange\" event also fires when queryMatches changes.\n\nExample:\n\n     <polymer-media-query query=\"max-width: 640px\" queryMatches=\"{{phoneScreen}}\"></polymer-media-query>"
        },
        "polymer-meta": {
            "name": "polymer-meta",
            "shortname": "polymer-meta",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-meta\\polymer-meta.html",
            "line": 10,
            "description": "polymer-meta is used to manage metadata.  When an instance of polymer-meta\nis created, it's automatically registered and add to the metaData storage given an id\nis set on the element. Use byId() to retrive a specific polymer-meta and\nthe property \"list\" to retrieve all registered polymer-meta's."
        },
        "polymer-overlay": {
            "name": "polymer-overlay",
            "shortname": "polymer-overlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 12,
            "description": "polymer-overlay displays overlayed on top of other content. It starts\nout hidden and is displayed by setting it's opened property to true.\nA polymer-overlay's opened state can be toggled by calling the toggle\nmethod.\n\nIt's common to want a polymer-overlay to animate to its opened\nposition. A number of helper css classes provide some basic open/close\nanimations. For example, assigning the class polymer-overlay-fade to a\npolymer-overlay will make it fade into and out of view as it opens and\ncloses. Note, if multiple polymer-overlay's are opened, they should\nstack on top of each other.\n\nStyling: The size and position of a polymer-overlay should be setup\nvia css.\npolymer-overlay is natually sized around its content. When a\npolymer-overlay is opened it is shown and the 'opened' class is added\nto it. This is typically where css transitions and animations are\napplied. When the polymer-overlay is closed, the 'opened' class is\nremoved and a 'closing' class is added. Use 'closing' to customize\nthe closing animation. \n\nClasses for animating polymer-overlay:\n\n* polymer-overlay-fade: fade in/out when opened/closed\n* polymer-overlay-scale-slideup: open: fade in and shrink;\nclose: slide up\n* polymer-overlay-shake: open: fly in and shake; close: shake and\nfly out.\n\nIt's common to use polymer-overlay to gather user input, for example\na login dialog. To facilitate this, polymer-overlay supports automatic\nfocusing of a specific element when it's opened. The element to be\nfocused should be given an autofocus attribute.\n\nAn element that should close the polymer-overlay will automatically\ndo so if it is given the overlay-toggle attribute. Please note that\npolymer-overlay will close whenever the user taps outside it or\npresses the escape key. The behavior can be turned off via the\nautoCloseDisabled property.\n\n    <div>\n      <polymer-overlay></polymer-overlay>\n      <h2>Dialog</h2>\n      <input placeholder=\"say something...\" autofocus>\n      <div>I agree with this wholeheartedly.</div>\n      <button overlay-toggle>OK</button>\n    </div>"
        },
        "polymer-selection": {
            "name": "polymer-selection",
            "shortname": "polymer-selection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-selection\\polymer-selection.html",
            "line": 12,
            "description": "The polymer-selection element is used to manage selection state. It has no\nvisual appearance and is typically used in conjuneciton with another element.\nFor example, <a href=\"polymer-selector.html\">polymer-selector</a>\nuse a polymer-selection to manage selection.\n\nTo mark an item as selected, call the select(item) method on \npolymer-selection. Notice that the item itself is an argument to this method.\nThe polymer-selection element manages selection state for any given set of\nitems. When an item is selected, the `polymer-select` event is fired.\nThe attribute \"multi\" indicates if multiple items can be selected at once.\n\nExample:\n\n    <polymer-element name=\"selection-example\">\n       <template>\n         <style>\n           ::-webkit-distributed(> .selected) {\n             font-weight: bold;\n             font-style: italic;\n           }\n         </style>\n         <ul on-tap=\"{{itemTapAction}}\">\n           <content></content>\n         </ul>\n         <polymer-selection id=\"selection\" multi on-polymer-select=\"{{selectAction}}\"></polymer-selection>\n       </template>\n       <script>\n         Polymer('selection-example', {\n           itemTapAction: function(e) {\n             this.$.selection.select(e.target);\n           },\n           selectAction: function(e, detail) {\n             detail.item.classList.toggle('selected', detail.isSelected);\n           }\n         });\n       </script>\n    </polymer-element>\n\n    <selection-example>\n      <li>Red</li>\n      <li>Green</li>\n      <li>Blue</li>\n    </selection-example>"
        },
        "polymer-ui-accordion": {
            "name": "polymer-ui-accordion",
            "shortname": "polymer-ui-accordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-accordion\\polymer-ui-accordion.html",
            "line": 10,
            "description": "polymer-ui-accordion is a simple accordion style element.  It should \nbe used in conjunction with polymer-ui-collapsible.  By default\nonly one collapsible stays open at a time.  To have multiple\ncollapsibles open set \"multi\" property on the accordion.\n\nExample:\n\n    <polymer-ui-accordion selected=\"0\">\n      <polymer-ui-collapsible>\n        <div class=\"polymer-ui-collapsible-header\">Header 1</div>\n        <div>....</div>\n      </polymer-ui-collapsible>\n      <polymer-ui-collapsible>\n        <div class=\"polymer-ui-collapsible-header\">Header 2</div>\n        <div>....</div>\n      </polymer-ui-collapsible>\n      <polymer-ui-collapsible>\n        <div class=\"polymer-ui-collapsible-header\">Header 3</div>\n        <div>....</div>\n      </polymer-ui-collapsible>\n    </polymer-ui-accordion>",
            "extends": "polymer-selector"
        },
        "polymer-ui-animated-pages": {
            "name": "polymer-ui-animated-pages",
            "shortname": "polymer-ui-animated-pages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-animated-pages\\polymer-ui-animated-pages.html",
            "line": 12,
            "description": "polymer-ui-animated-pages",
            "extends": "polymer-selector"
        },
        "polymer-ui-arrow": {
            "name": "polymer-ui-arrow",
            "shortname": "polymer-ui-arrow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 10,
            "description": "polymer-ui-arrow is styled to look like an arrow.\n\nExample:\n\n    <polymer-ui-arrow direction=\"up\" size=\"20\"></polymer-ui-arrow>"
        },
        "polymer-ui-breadcrumbs": {
            "name": "polymer-ui-breadcrumbs",
            "shortname": "polymer-ui-breadcrumbs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "line": 10,
            "description": "polymer-ui-breadcrumbs shows the user where they are in relation to a\nhierarchy.  Use 'crumbs' property to specify the content for breadcumbs.\n\nExample: \n\n    <polymer-ui-breadcrumbs crumbs=\"{{crumbs}}\" selectedCrumb=\"{{crumb}}\"></polymer-ui-breadcrumbs>\n\n    ....\n    this.crumbs = [\n      {label: 'Overview'}, \n      {label: 'Subitem1'}, \n      {label: 'Subitem2'},\n      {label: 'Subitem3'}\n    ];"
        },
        "polymer-ui-card": {
            "name": "polymer-ui-card",
            "shortname": "polymer-ui-card",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-card\\polymer-ui-card.html",
            "line": 11,
            "description": "polymer-ui-card <b>(WIP)</b>\n\nExample:\n\n    <polymer-ui-card>\n      ...\n    </polymer-ui-card>"
        },
        "polymer-ui-collapsible": {
            "name": "polymer-ui-collapsible",
            "shortname": "polymer-ui-collapsible",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "line": 10,
            "description": "polymer-ui-collapsible has a header and a body and the body appears or\ndisappears based on \"active\" property.  Tapping on the header will toggle\nthe active state.  User needs to put the class \"polymer-ui-collapsible-header\"\non the element to indicate it represents a header.\n\nExample:\n\n    <polymer-ui-collapsible>\n      <div class=\"polymer-ui-collapsible-header\">Title</div>\n      <div>\n        some content...\n      </div>\n    </polymer-ui-collapsible>"
        },
        "polymer-ui-icon": {
            "name": "polymer-ui-icon",
            "shortname": "polymer-ui-icon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 13,
            "description": "polymer-ui-icon is a 24x24 glyph expressed as a background-image.\n\nExample:\n\n    <polymer-ui-icon src=\"star.png\"></polymer-ui-icon>\n\nOptionally can use other size like 32x32 by setting the attribute \"size\" to \"32\":\n\n    <polymer-ui-icon src=\"big_star.png\" size=\"32\"></polymer-ui-icon>\n\nPolymer includes an icon set.  The property \"icon\" can be used\nto specify which icon to use.\n\nExample:\n\n    <polymer-ui-icon icon=\"menu\"></polymer-ui-icon>"
        },
        "polymer-ui-icon-button": {
            "name": "polymer-ui-icon-button",
            "shortname": "polymer-ui-icon-button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 10,
            "description": "polymer-ui-icon-button enables you to place an image centered in a button.\n\nExample:\n\n    <polymer-ui-icon-button src=\"star.png\"></polymer-ui-icon-button>\n\nPolymer includes an icon set.  The property \"icon\" can be used\nto specify which icon to use.\n\nExample:\n\n    <polymer-ui-icon-button icon=\"menu\"></polymer-ui-icon-button>"
        },
        "polymer-ui-menu": {
            "name": "polymer-ui-menu",
            "shortname": "polymer-ui-menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-menu\\polymer-ui-menu.html",
            "line": 10,
            "description": "polymer-ui-menu is a polymer-selector with theme propagation.  It styles to look like \na menu and should be used in conjunction with polymer-ui-menu-item.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu>\n\nThe \"selectedItem\" property returns the currently selected item.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\" selectedItem=\"{{item}}\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu>\n\n    <div>selected label: {{item.label}}</div>\n\nThe event \"polymer-select\" can also be used to listen for selection change.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\" on-polymer-select=\"{{selectAction}}\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu>\n\n    ...\n\n    selectAction: function(e, detail) {\n      if (detail.isSelected) {\n        var selectedItem = detail.item;\n        ...\n      }\n    }",
            "extends": "polymer-selector"
        },
        "polymer-ui-menu-button": {
            "name": "polymer-ui-menu-button",
            "shortname": "polymer-ui-menu-button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 10,
            "description": "polymer-ui-menu-button is a polymer-ui-icon-button with a drop down menu\nthat allows the user to select an option. The drop down menu is styled with\nan arrow pointing to the button, and can be positioned to the top or the\nbottom of the button with the valign property. The valign property aligns\nthe menu to the left or right edge of the button.\n\nExample:\n\n    <polymer-ui-menu-button selected=\"0\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu-button>"
        },
        "polymer-ui-menu-item": {
            "name": "polymer-ui-menu-item",
            "shortname": "polymer-ui-menu-item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 10,
            "description": "polymer-ui-menu-item is styled to look like a menu item.  It should be used\nin conjunction with polymer-ui-menu or polymer-ui-sibebar-menu.\n\nExample:\n\n    <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>"
        },
        "polymer-ui-nav-arrow": {
            "name": "polymer-ui-nav-arrow",
            "shortname": "polymer-ui-nav-arrow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html",
            "line": 10,
            "description": "polymer-ui-nav-arrow is a polymer-ui-arrow that can be positioned to the \nright of the target node.  This element is used in \n<a href=\"polymer-ui-sidebar-menu.html\">polymer-ui-sidebar-menu</a>.\n\nExample:\n\n    <polymer-selector selectedItem=\"{{item}}\">\n      <div>Item 1</div>\n      <div>Item 2</div>\n      <div>Item 3</div>\n      <div>Item 4</div>\n      <div>Item 5</div>\n    </polymer-selector>\n    <polymer-ui-nav-arrow target=\"{{item}}\"></polymer-ui-nav-arrow>",
            "extends": "polymer-ui-arrow"
        },
        "polymer-ui-pages": {
            "name": "polymer-ui-pages",
            "shortname": "polymer-ui-pages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-pages\\polymer-ui-pages.html",
            "line": 12,
            "description": "polymer-ui-pages",
            "extends": "polymer-selector"
        },
        "polymer-ui-ratings": {
            "name": "polymer-ui-ratings",
            "shortname": "polymer-ui-ratings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "line": 14,
            "description": "polymer-ui-ratings allows users to rate items.\n\nExample:\n\n    <polymer-ui-ratings value=\"3\"></polymer-ui-ratings>\n\nBy default polymer-ui-ratings shows 5 stars but can be configured using \n\"count\" attribute:\n\n    <polymer-ui-ratings value=\"3\" count=\"10\"></polymer-ui-ratings>"
        },
        "polymer-ui-scaffold": {
            "name": "polymer-ui-scaffold",
            "shortname": "polymer-ui-scaffold",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-scaffold\\polymer-ui-scaffold.html",
            "line": 13
        },
        "polymer-ui-sidebar": {
            "name": "polymer-ui-sidebar",
            "shortname": "polymer-ui-sidebar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-sidebar\\polymer-ui-sidebar.html",
            "line": 10,
            "description": "polymer-ui-sidebar is a sidebar usually on the left side of the main content.\n\nExample:\n\n    <polymer-ui-sidebar label=\"Polymer\">\n        some content...\n    </polymer-ui-sidebar>"
        },
        "polymer-ui-sidebar-header": {
            "name": "polymer-ui-sidebar-header",
            "shortname": "polymer-ui-sidebar-header",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html",
            "line": 10,
            "description": "polymer-ui-sidebar-header is a header that styles to be used along with \npolymer-ui-sidebar."
        },
        "polymer-ui-sidebar-menu": {
            "name": "polymer-ui-sidebar-menu",
            "shortname": "polymer-ui-sidebar-menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-sidebar-menu\\polymer-ui-sidebar-menu.html",
            "line": 10,
            "description": "polymer-ui-sidebar-menu is a polymer-menu styled to look like a sidebar menu.\nThe sidebar menu is styled with an arrow pointing to the selected menu item.\nUse it in conjunction with polymer-ui-menu-item.\n\nExample:\n\n    <polymer-ui-sidebar-menu selected=\"0\">\n      <polymer-ui-menu-item icon=\"menu\" label=\"Home\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"menu\" label=\"Explore\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"menu\" label=\"Favorites\"></polymer-ui-menu-item>\n    </polymer-ui-sidebar-menu>",
            "extends": "polymer-ui-menu"
        },
        "polymer-ui-splitter": {
            "name": "polymer-ui-splitter",
            "shortname": "polymer-ui-splitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "line": 10,
            "description": "polymer-ui-splitter provides a spilt bar and dragging on the split bar\nwill resize the sibling element.  Use the property \"direction\" to indicate\nwhich sibling to be resized and the orientation.\n\nExample:\n\n    <div class=\"flexbox\">\n      <div>left</div>\n      <polymer-ui-splitter direction=\"left\"></polymer-ui-splitter>\n      <div flex>right</div>\n    </div>\n\nFor horizontal splitter set direction to \"up\" or \"down\".\n\nExample:\n\n    <div class=\"flexbox column\">\n      <div>top</div>\n      <polymer-ui-splitter direction=\"up\"></polymer-ui-splitter>\n      <div flex>bottom</div>\n    </div>"
        },
        "polymer-ui-submenu-item": {
            "name": "polymer-ui-submenu-item",
            "shortname": "polymer-ui-submenu-item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-submenu-item\\polymer-ui-submenu-item.html",
            "line": 10,
            "description": "polymer-ui-submenu-item is a menu-item that can contains other menu-items.\nIt should be used in conjunction with polymer-ui-menu or \npolymer-ui-sibebar-menu.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\">\n      <polymer-ui-submenu-item icon=\"settings\" label=\"Topics\">\n        <polymer-ui-menu-item label=\"Topics 1\"></polymer-ui-menu-item>\n        <polymer-ui-menu-item label=\"Topics 2\"></polymer-ui-menu-item>\n      </polymer-ui-submenu-item>\n      <polymer-ui-submenu-item icon=\"settings\" label=\"Favorites\">\n        <polymer-ui-menu-item label=\"Favorites 1\"></polymer-ui-menu-item>\n        <polymer-ui-menu-item label=\"Favorites 2\"></polymer-ui-menu-item>\n        <polymer-ui-menu-item label=\"Favorites 3\"></polymer-ui-menu-item>\n      </polymer-ui-submenu-item>\n    </polymer-ui-menu>",
            "extends": "polymer-ui-menu-item"
        },
        "polymer-ui-tabs": {
            "name": "polymer-ui-tabs",
            "shortname": "polymer-ui-tabs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-tabs\\polymer-ui-tabs.html",
            "line": 12,
            "description": "polymer-ui-tabs is a polymer-selector styled to look like a tab menu.\n\nExample:\n\n    <polymer-ui-tabs selected=\"0\">\n      <span>One</span>\n      <span>Two</span>\n      <span>Three</span>\n      <span>Four</span>\n    </polymer-ui-tabs>",
            "extends": "polymer-selector"
        },
        "polymer-ui-toggle-button": {
            "name": "polymer-ui-toggle-button",
            "shortname": "polymer-ui-toggle-button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 10,
            "description": "polymer-ui-toggle-button is a button that has one of two states (ON/OFF).\nYou can tap or drag the button to switch state.\n\nExample:\n\n    <polymer-ui-toggle-button></polymer-ui-toggle-button>"
        },
        "polymer-ui-toolbar": {
            "name": "polymer-ui-toolbar",
            "shortname": "polymer-ui-toolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\..\\polymer-ui-toolbar\\polymer-ui-toolbar.html",
            "line": 11,
            "description": "polymer-ui-toolbar is a horizontal bar containing elements that can perform actions.\n\nExample:\n\n    <polymer-ui-toolbar>\n      <polymer-ui-icon-button src=\"menu.png\" on-click=\"{{menuAction}}\"></polymer-ui-icon-button>\n      <div flex>Title</div>\n      <polymer-ui-icon-button src=\"more.png\" on-click=\"{{moreAction}}\"></polymer-ui-icon-button>\n    </polymer-ui-toolbar>\n\npolymer-ui-toolbar can adopt to smaller screen size.  If the attribute \"responsive\" is set\nand the screen size is less than the responsiveWidth (default to 800px), the toolbar will\nbe moved to the bottom of the page.\n\nExample:\n\n    <polymer-ui-toolbar>\n      <polymer-ui-icon-button icon=\"menu\"></polymer-ui-icon-button>\n      <div flex>Title</div>\n      <polymer-ui-toolbar responsive>\n        <polymer-ui-icon-button icon=\"add\"></polymer-ui-icon-button>\n        <polymer-ui-icon-button icon=\"trash\"></polymer-ui-icon-button>\n        <polymer-ui-icon-button icon=\"search\"></polymer-ui-icon-button>\n      </polymer-ui-toolbar>\n    </polymer-ui-toolbar>"
        }
    },
    "classitems": [
        {
            "file": "..\\..\\CustomElements\\src\\CustomElements.js",
            "line": 53,
            "description": "Registers a custom tag name with the document.\n\nWhen a registered element is created, a `readyCallback` method is called\nin the scope of the element. The `readyCallback` method can be specified on\neither `options.prototype` or `options.lifecycle` with the latter taking\nprecedence.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "name",
                    "description": "The tag name to register. Must include a dash ('-'),\n   for example 'x-component'.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "extends",
                            "description": "(_off spec_) Tag name of an element to extend (or blank for a new\n     element). This parameter is not part of the specification, but instead\n     is a hint for the polyfill because the extendee is difficult to infer.\n     Remember that the input prototype must chain to the extended element's\n     prototype (or HTMLElement.prototype) regardless of the value of\n     `extends`.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "prototype",
                            "description": "The prototype to use for the new\n     element. The prototype must inherit from HTMLElement.",
                            "type": "Object"
                        },
                        {
                            "name": "lifecycle",
                            "description": "Callbacks that fire at important phases in the life of the custom\n     element.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     FancyButton = document.register(\"fancy-button\", {\n       extends: 'button',\n       prototype: Object.create(HTMLButtonElement.prototype, {\n         readyCallback: {\n           value: function() {\n             console.log(\"a fancy-button was created\",\n           }\n         }\n       })\n     });"
            ],
            "return": {
                "description": "Constructor for the newly registered type.",
                "type": "Function"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\CustomElements\\src\\CustomElements.js",
            "line": 355,
            "description": "Upgrade an element to a custom element. Upgrading an element\ncauses the custom prototype to be applied, an `is` attribute \nto be attached (as needed), and invocation of the `readyCallback`.\n`upgrade` does nothing if the element is already upgraded, or\nif it matches no registered custom tag name.",
            "itemtype": "method",
            "name": "ugprade",
            "params": [
                {
                    "name": "element",
                    "description": "The element to upgrade.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "The upgraded element.",
                "type": "Element"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 39,
            "description": "Schedules |dispatchCallback| to be called in the future.",
            "params": [
                {
                    "name": "observer",
                    "description": "",
                    "type": "MutationObserver"
                }
            ],
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 101,
            "description": "This function is used for the \"For each registered observer observer (with\nobserver's options as options) in target's list of registered observers,\nrun these substeps:\" and the \"For each ancestor ancestor of target, and for\neach registered observer observer (with options options) in ancestor's list\nof registered observers, run these substeps:\" part of the algorithms. The\n|options.subtree| is checked to ensure that the callback is called\ncorrectly.",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function(MutationObserverInit):MutationRecord"
                }
            ],
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 136,
            "description": "The class that maps to the DOM MutationObserver interface.",
            "params": [
                {
                    "name": "callback.",
                    "description": "",
                    "type": "Function"
                }
            ],
            "is_constructor": 1,
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 224,
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                }
            ],
            "is_constructor": 1,
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 256,
            "description": "Creates a record without |oldValue| and caches it as |currentRecord| for\nlater use.",
            "params": [
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "MutationRecord"
            },
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 266,
            "description": "Gets or creates a record with |oldValue| based in the |currentRecord|",
            "params": [
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "MutationRecord"
            },
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 283,
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "MutationRecord"
                }
            ],
            "return": {
                "description": "Whether the record represents a record from the current\nmutation event.",
                "type": "Boolean"
            },
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 292,
            "description": "Selects which record, if any, to replace the last record in the queue.\nThis returns |null| if no record should be replaced.",
            "params": [
                {
                    "name": "lastRecord",
                    "description": "",
                    "type": "MutationRecord"
                },
                {
                    "name": "newRecord",
                    "description": "",
                    "type": "MutationRecord"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "MutationRecord"
                }
            ],
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 312,
            "description": "Class used to represent a registered observer.",
            "params": [
                {
                    "name": "observer",
                    "description": "",
                    "type": "MutationObserver"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "MutationObserverInit"
                }
            ],
            "is_constructor": 1,
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\MutationObservers\\MutationObserver.js",
            "line": 387,
            "description": "Adds a transient observer on node. The transient observer gets removed\nnext time we deliver the change records.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "untitled-element",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\NodeBind\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\PointerEvent.js",
            "line": 7,
            "description": "This is the constructor for new PointerEvents.\n\nNew Pointer Events must be given a type, and an optional dictionary of\ninitialization properties.\n\nDue to certain platform requirements, events returned from the constructor\nidentify as MouseEvents.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "inType",
                    "description": "The type of the event to create.",
                    "type": "String"
                },
                {
                    "name": "inDict",
                    "description": "An optional dictionary of initial event properties.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A new PointerEvent of type `inType` and initialized with properties from `inDict`.",
                "type": "Event"
            },
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\dispatcher.js",
            "line": 78,
            "description": "This module is for normalizing events. Mouse and Touch events will be\ncollected here, and fire PointerEvents that have the same semantics, no\nmatter the source.\nEvents fired:\n  - pointerdown: a pointing is added\n  - pointerup: a pointer is removed\n  - pointermove: a pointer is moved\n  - pointerover: a pointer crosses into an element\n  - pointerout: a pointer leaves an element\n  - pointercancel: a pointer will no longer generate events",
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\dispatcher.js",
            "line": 99,
            "description": "Add a new event source that will generate pointer events.\n\n`inSource` must contain an array of event names named `events`, and\nfunctions with the names specified in the `events` array.",
            "params": [
                {
                    "name": "name",
                    "description": "A name for the event source",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "A new source of platform events.",
                    "type": "Object"
                }
            ],
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\dispatcher.js",
            "line": 209,
            "description": "Creates a new Event of type `inType`, based on the information in\n`inEvent`.",
            "params": [
                {
                    "name": "inType",
                    "description": "A string representing the type of event to create",
                    "type": "String"
                },
                {
                    "name": "inEvent",
                    "description": "A platform event with a target",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "A PointerEvent of type `inType`",
                "type": "Event"
            },
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\dispatcher.js",
            "line": 231,
            "description": "Returns a snapshot of inEvent, with writable properties.",
            "params": [
                {
                    "name": "inEvent",
                    "description": "An event that contains properties to copy.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "An object containing shallow copies of `inEvent`'s\n   properties.",
                "type": "Object"
            },
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\dispatcher.js",
            "line": 279,
            "description": "Dispatches the event to its target.",
            "params": [
                {
                    "name": "inEvent",
                    "description": "The event to be dispatched.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "True if an event handler returns true, false otherwise.",
                "type": "Boolean"
            },
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\installer.js",
            "line": 7,
            "description": "This module uses Mutation Observers to dynamically adjust which nodes will\ngenerate Pointer Events.\n\nAll nodes that wish to generate Pointer Events must have the attribute\n`touch-action` set to `none`.",
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\platform-events.js",
            "line": 7,
            "description": "This module contains the handlers for native platform events.\nFrom here, the dispatcher is called to create unified pointer events.\nIncluded are touch events (v1), mouse events, and MSPointerEvents.",
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\src\\pointermap.js",
            "line": 7,
            "description": "This module implements an map of pointer states",
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerEvents\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "PointerGestureEvent",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\PointerGestureEvent.js",
            "line": 39,
            "description": "Allows for any gesture to prevent the tap gesture.",
            "itemtype": "method",
            "name": "preventTap",
            "class": "PointerGestureEvent",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\dispatcher.js",
            "line": 211,
            "description": "Enable gesture events for a given scope, typically\n[ShadowRoots](https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#shadow-root-object).",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "scope",
                    "description": "A top level scope to enable gesture\nsupport on.",
                    "type": "ShadowRoot"
                }
            ],
            "class": "PointerGestures",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\flick.js",
            "line": 16,
            "description": "Signed velocity of the flick in the x direction.",
            "itemtype": "property",
            "name": "xVelocity",
            "type": "Number",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\flick.js",
            "line": 21,
            "description": "Signed velocity of the flick in the y direction.",
            "type": "Number",
            "itemtype": "property",
            "name": "yVelocity",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\flick.js",
            "line": 26,
            "description": "Unsigned total velocity of the flick.",
            "type": "Number",
            "itemtype": "property",
            "name": "velocity",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\flick.js",
            "line": 31,
            "description": "Angle of the flick in degrees, with 0 along the\npositive x axis.",
            "type": "Number",
            "itemtype": "property",
            "name": "angle",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\flick.js",
            "line": 37,
            "description": "Axis with the greatest absolute velocity. Denoted\nwith 'x' or 'y'.",
            "type": "String",
            "itemtype": "property",
            "name": "majorAxis",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\flick.js",
            "line": 43,
            "description": "Type of the pointer that made the flick.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\hold.js",
            "line": 14,
            "description": "Milliseconds pointer has been held down.",
            "type": "Number",
            "itemtype": "property",
            "name": "holdTime",
            "class": "hold",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\hold.js",
            "line": 19,
            "description": "Type of pointer that made the holding event.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "hold",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\hold.js",
            "line": 35,
            "description": "Type of pointer that made the holding event.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "released",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\tap.js",
            "line": 21,
            "description": "X axis position of the tap.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\tap.js",
            "line": 26,
            "description": "Y axis position of the tap.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\tap.js",
            "line": 31,
            "description": "Type of the pointer that made the tap.",
            "itemtype": "property",
            "name": "pointerType",
            "type": "String",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 14,
            "description": "Pixels moved in the x direction since trackstart.",
            "type": "Number",
            "itemtype": "property",
            "name": "dx",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 19,
            "description": "Pixes moved in the y direction since trackstart.",
            "type": "Number",
            "itemtype": "property",
            "name": "dy",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 24,
            "description": "Pixels moved in the x direction since the last track.",
            "type": "Number",
            "itemtype": "property",
            "name": "ddx",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 29,
            "description": "Pixles moved in the y direction since the last track.",
            "type": "Number",
            "itemtype": "property",
            "name": "ddy",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 34,
            "description": "The clientX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "clientX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 39,
            "description": "The clientY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "clientY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 44,
            "description": "The pageX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "pageX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 49,
            "description": "The pageY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "pageY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 54,
            "description": "The screenX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "screenX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 59,
            "description": "The screenY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "screenY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 64,
            "description": "The last x axis direction of the pointer.",
            "type": "Number",
            "itemtype": "property",
            "name": "xDirection",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 69,
            "description": "The last y axis direction of the pointer.",
            "type": "Number",
            "itemtype": "property",
            "name": "yDirection",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 74,
            "description": "A shared object between all tracking events.",
            "type": "Object",
            "itemtype": "property",
            "name": "trackInfo",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 79,
            "description": "The element currently under the pointer.",
            "type": "Element",
            "itemtype": "property",
            "name": "relatedTarget",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\src\\track.js",
            "line": 84,
            "description": "The type of pointer that make the track gesture.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\PointerGestures\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Element.js",
            "line": 84,
            "description": "Useful for generating the accessor pair for a property that reflects an\nattribute.",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 22,
            "description": "Collects nodes from a DocumentFragment or a Node for removal followed\nby an insertion.\n\nThis updates the internal pointers for node, previousNode and nextNode.",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 151,
            "description": "This represents a wrapper of a native DOM node.",
            "params": [
                {
                    "name": "original",
                    "description": "The original DOM node, aka, the visual DOM node.",
                    "type": "!Node"
                }
            ],
            "is_constructor": 1,
            "extends": "{EventTarget}",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 166,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 172,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 178,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 184,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 190,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 364,
            "description": "Called after a node was added. Subclasses override this to invalidate\nthe renderer as needed.",
            "access": "private",
            "tagname": "",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 379,
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 386,
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 392,
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 398,
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\Node.js",
            "line": 404,
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\events.js",
            "line": 381,
            "description": "Creates a new Event wrapper or wraps an existin native Event object.",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String|Event"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object="
                }
            ],
            "is_constructor": 1,
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\events.js",
            "line": 516,
            "description": "Constructs a new native event.",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\events.js",
            "line": 576,
            "description": "This represents a wrapper for an EventTarget.",
            "params": [
                {
                    "name": "impl",
                    "description": "The original event target.",
                    "type": "!EventTarget"
                }
            ],
            "is_constructor": 1,
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\events.js",
            "line": 683,
            "description": "Returns a function that is to be used as a getter for `onfoo` properties.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers\\events.js",
            "line": 696,
            "description": "Returns a function that is to be used as a setter for `onfoo` properties.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 22,
            "description": "Updates the fields of a wrapper to a snapshot of the logical DOM as needed.\nUp means parentNode\nSideways means previous and next sibling.",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "!Node"
                }
            ],
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 34,
            "description": "Updates the fields of a wrapper to a snapshot of the logical DOM as needed.\nDown means first and last child",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "!Node"
                }
            ],
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 133,
            "description": "Visits all nodes in the tree that fulfils the |predicate|. If the |visitor|\nfunction returns |false| the traversal is aborted.",
            "params": [
                {
                    "name": "tree",
                    "description": "",
                    "type": "!Node"
                },
                {
                    "name": "predicate",
                    "description": "",
                    "type": "Function(!Node) : boolean"
                },
                {
                    "name": "visitor",
                    "description": "",
                    "type": "Function(!Node) : *"
                }
            ],
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 178,
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Element"
                }
            ],
            "oaram": "{Element} point The insertion point element.",
            "return": {
                "description": "Whether the node matches the insertion point.",
                "type": "Boolean"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 233,
            "description": "Returns existing shadow renderer for a host or creates it if it is needed.",
            "params": [
                {
                    "name": "host",
                    "description": "",
                    "type": "!Element"
                }
            ],
            "return": {
                "description": "",
                "type": "!ShadowRenderer"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 264,
            "description": "RenderNode is used as an in memory \"render tree\". When we render the\ncomposed tree we create a tree of RenderNodes, then we diff this against\nthe real DOM tree and make minimal changes as needed.",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 454,
            "description": "Invalidates the attributes used to keep track of which attributes may\ncause the renderer to be invalidated.",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 462,
            "description": "Parses the selector and makes this renderer dependent on the attribute\nbeing used in the selector.",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\ShadowRenderer.js",
            "line": 616,
            "description": "This gets called when a node was added or removed to it.",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 176,
            "params": [
                {
                    "name": "nativeConstructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "wrapperConstructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "opt_instance",
                    "description": "If present, this is used to extract\n    properties from an instance object.",
                    "type": "Object="
                }
            ],
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 205,
            "description": "Creates a generic wrapper constructor based on |object| and its\nconstructor.\nSometimes the constructor does not have an associated instance\n(CharacterData for example). In that case you can pass the constructor that\nyou want to map the object to using |opt_nativeConstructor|.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "opt_nativeConstructor",
                    "description": "",
                    "type": "Function="
                }
            ],
            "return": {
                "description": "The generated constructor.",
                "type": "Function"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 265,
            "description": "Wraps a node in a WrapperNode. If there already exists a wrapper for the\n|node| that wrapper is returned instead.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "",
                "type": "WrapperNode"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 280,
            "description": "Unwraps a wrapper and returns the node it is wrapping.",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "WrapperNode"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 292,
            "description": "Unwraps object if it is a wrapper.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The native implementation object.",
                "type": "Object"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 301,
            "description": "Wraps object if it is not a wrapper.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The wrapper for object.",
                "type": "Object"
            },
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 310,
            "description": "Overrides the current wrapper (if any) for node.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "wrapper",
                    "description": "If left out the wrapper will be created as\n    needed next time someone wraps the node.",
                    "type": "WrapperNode="
                }
            ],
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\src\\wrappers.js",
            "line": 338,
            "description": "Forwards existing methods on the native object to the wrapper methods.\nThis does not wrap any of the arguments or the return value since the\nwrapper implementation already takes care of that.",
            "params": [
                {
                    "name": "constructors",
                    "description": "",
                    "type": "Array.<Function>"
                }
            ],
            "parem": "{Array.<string>} names",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\test\\js\\events.js",
            "line": 538,
            "description": "Creates a deep tree, (all nodes but the leaf have 1 child)",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\ShadowDOM\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\TemplateBinding\\src\\TemplateBinding.js",
            "line": 251,
            "description": "This represents a <template> element.",
            "is_constructor": 1,
            "extends": "{HTMLElement}",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\TemplateBinding\\src\\TemplateBinding.js",
            "line": 331,
            "description": "Ensures proper API and content model for template elements.",
            "params": [
                {
                    "name": "opt_instanceRef",
                    "description": "The template element which\n    |el| template element will return as the value of its ref(), and whose\n    content will be used as source when createInstance() is invoked.",
                    "type": "HTMLTemplateElement"
                }
            ],
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\TemplateBinding\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "untitled-element",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\effects.js",
            "line": 196,
            "description": "author Christopher Blum\n   - based on the idea of Remy Sharp, http://remysharp.com/2009/01/26/element-in-view-event-plugin/\n   - forked from http://github.com/zuk/jquery.inview/",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js",
            "line": 53,
            "description": "This funtion is assigned to the <canvas> elements as element.getContext().",
            "this": "{HTMLElement}",
            "return": {
                "description": "",
                "type": "CanvasRenderingContext2D_"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js",
            "line": 65,
            "description": "Binds a function to an object. The returned function will always use the\npassed in {@code obj} as {@code this}.\n\nExample:\n\n  g = bind(f, obj, a, b)\n  g(c, d) // will do f.call(obj, a, b, c, d)",
            "params": [
                {
                    "name": "f",
                    "description": "The function to bind the object to",
                    "type": "Function"
                },
                {
                    "name": "obj",
                    "description": "The object that should act as this when the function\n    is called",
                    "type": "Object"
                },
                {
                    "name": "var_args",
                    "description": "Rest arguments that will be used as the initial\n    arguments when the function is called",
                    "type": "*"
                }
            ],
            "return": {
                "description": "A new function that has bound this",
                "type": "Function"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js",
            "line": 132,
            "description": "Public initializes a canvas element so that it can be used as canvas\nelement from now on. This is called automatically before the page is\nloaded but if you are creating elements using createElement you need to\nmake sure this is called on the element.",
            "params": [
                {
                    "name": "el",
                    "description": "The canvas element to initialize.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "the element that was created.",
                "type": "HTMLElement"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js",
            "line": 563,
            "description": "This class implements CanvasRenderingContext2D interface as described by\nthe WHATWG.",
            "params": [
                {
                    "name": "canvasElement",
                    "description": "The element that the 2D context should\nbe associated with",
                    "type": "HTMLElement"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js",
            "line": 1200,
            "description": "The text drawing function.\nThe maxWidth argument isn't taken in account, since no browser supports\nit yet.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js",
            "line": 1318,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\src\\observe.js",
            "line": 1100,
            "description": "Splice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\src\\observe.js",
            "line": 1114,
            "description": "Lacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\observe-js\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\workbench\\ShadowDOM\\event-path.html",
            "line": 28,
            "description": "Creates a deep tree, (all nodes but the leaf have 1 child)",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1167,
            "description": "Splice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1181,
            "description": "Lacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1680,
            "params": [
                {
                    "name": "nativeConstructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "wrapperConstructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "opt_instance",
                    "description": "If present, this is used to extract\n    properties from an instance object.",
                    "type": "Object="
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1709,
            "description": "Creates a generic wrapper constructor based on |object| and its\nconstructor.\nSometimes the constructor does not have an associated instance\n(CharacterData for example). In that case you can pass the constructor that\nyou want to map the object to using |opt_nativeConstructor|.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "opt_nativeConstructor",
                    "description": "",
                    "type": "Function="
                }
            ],
            "return": {
                "description": "The generated constructor.",
                "type": "Function"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1769,
            "description": "Wraps a node in a WrapperNode. If there already exists a wrapper for the\n|node| that wrapper is returned instead.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "",
                "type": "WrapperNode"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1784,
            "description": "Unwraps a wrapper and returns the node it is wrapping.",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "WrapperNode"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1796,
            "description": "Unwraps object if it is a wrapper.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The native implementation object.",
                "type": "Object"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1805,
            "description": "Wraps object if it is not a wrapper.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The wrapper for object.",
                "type": "Object"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1814,
            "description": "Overrides the current wrapper (if any) for node.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "wrapper",
                    "description": "If left out the wrapper will be created as\n    needed next time someone wraps the node.",
                    "type": "WrapperNode="
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 1842,
            "description": "Forwards existing methods on the native object to the wrapper methods.\nThis does not wrap any of the arguments or the return value since the\nwrapper implementation already takes care of that.",
            "params": [
                {
                    "name": "constructors",
                    "description": "",
                    "type": "Array.<Function>"
                }
            ],
            "parem": "{Array.<string>} names",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2260,
            "description": "Creates a new Event wrapper or wraps an existin native Event object.",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String|Event"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object="
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2395,
            "description": "Constructs a new native event.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2455,
            "description": "This represents a wrapper for an EventTarget.",
            "params": [
                {
                    "name": "impl",
                    "description": "The original event target.",
                    "type": "!EventTarget"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2562,
            "description": "Returns a function that is to be used as a getter for `onfoo` properties.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2575,
            "description": "Returns a function that is to be used as a setter for `onfoo` properties.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2697,
            "description": "Collects nodes from a DocumentFragment or a Node for removal followed\nby an insertion.\n\nThis updates the internal pointers for node, previousNode and nextNode.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2826,
            "description": "This represents a wrapper of a native DOM node.",
            "params": [
                {
                    "name": "original",
                    "description": "The original DOM node, aka, the visual DOM node.",
                    "type": "!Node"
                }
            ],
            "is_constructor": 1,
            "extends": "{EventTarget}",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2841,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2847,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2853,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2859,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 2865,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 3039,
            "description": "Called after a node was added. Subclasses override this to invalidate\nthe renderer as needed.",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 3054,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 3061,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 3067,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 3073,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 3079,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 3436,
            "description": "Useful for generating the accessor pair for a property that reflects an\nattribute.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4123,
            "description": "Updates the fields of a wrapper to a snapshot of the logical DOM as needed.\nUp means parentNode\nSideways means previous and next sibling.",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "!Node"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4135,
            "description": "Updates the fields of a wrapper to a snapshot of the logical DOM as needed.\nDown means first and last child",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "!Node"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4234,
            "description": "Visits all nodes in the tree that fulfils the |predicate|. If the |visitor|\nfunction returns |false| the traversal is aborted.",
            "params": [
                {
                    "name": "tree",
                    "description": "",
                    "type": "!Node"
                },
                {
                    "name": "predicate",
                    "description": "",
                    "type": "Function(!Node) : boolean"
                },
                {
                    "name": "visitor",
                    "description": "",
                    "type": "Function(!Node) : *"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4279,
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Element"
                }
            ],
            "oaram": "{Element} point The insertion point element.",
            "return": {
                "description": "Whether the node matches the insertion point.",
                "type": "Boolean"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4334,
            "description": "Returns existing shadow renderer for a host or creates it if it is needed.",
            "params": [
                {
                    "name": "host",
                    "description": "",
                    "type": "!Element"
                }
            ],
            "return": {
                "description": "",
                "type": "!ShadowRenderer"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4365,
            "description": "RenderNode is used as an in memory \"render tree\". When we render the\ncomposed tree we create a tree of RenderNodes, then we diff this against\nthe real DOM tree and make minimal changes as needed.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4555,
            "description": "Invalidates the attributes used to keep track of which attributes may\ncause the renderer to be invalidated.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4563,
            "description": "Parses the selector and makes this renderer dependent on the attribute\nbeing used in the selector.",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 4717,
            "description": "This gets called when a node was added or removed to it.",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 7232,
            "description": "This represents a <template> element.",
            "is_constructor": 1,
            "extends": "{HTMLElement}",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 7312,
            "description": "Ensures proper API and content model for template elements.",
            "params": [
                {
                    "name": "opt_instanceRef",
                    "description": "The template element which\n    |el| template element will return as the value of its ref(), and whose\n    content will be used as source when createInstance() is invoked.",
                    "type": "HTMLTemplateElement"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 9624,
            "description": "Converts a style property name to a css property name. For example:\n\"WebkitUserSelect\" to \"-webkit-user-select\"",
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10371,
            "description": "Schedules |dispatchCallback| to be called in the future.",
            "params": [
                {
                    "name": "observer",
                    "description": "",
                    "type": "MutationObserver"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10433,
            "description": "This function is used for the \"For each registered observer observer (with\nobserver's options as options) in target's list of registered observers,\nrun these substeps:\" and the \"For each ancestor ancestor of target, and for\neach registered observer observer (with options options) in ancestor's list\nof registered observers, run these substeps:\" part of the algorithms. The\n|options.subtree| is checked to ensure that the callback is called\ncorrectly.",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function(MutationObserverInit):MutationRecord"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10468,
            "description": "The class that maps to the DOM MutationObserver interface.",
            "params": [
                {
                    "name": "callback.",
                    "description": "",
                    "type": "Function"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10556,
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10588,
            "description": "Creates a record without |oldValue| and caches it as |currentRecord| for\nlater use.",
            "params": [
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "MutationRecord"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10598,
            "description": "Gets or creates a record with |oldValue| based in the |currentRecord|",
            "params": [
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "MutationRecord"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10615,
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "MutationRecord"
                }
            ],
            "return": {
                "description": "Whether the record represents a record from the current\nmutation event.",
                "type": "Boolean"
            },
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10624,
            "description": "Selects which record, if any, to replace the last record in the queue.\nThis returns |null| if no record should be replaced.",
            "params": [
                {
                    "name": "lastRecord",
                    "description": "",
                    "type": "MutationRecord"
                },
                {
                    "name": "newRecord",
                    "description": "",
                    "type": "MutationRecord"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "MutationRecord"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10644,
            "description": "Class used to represent a registered observer.",
            "params": [
                {
                    "name": "observer",
                    "description": "",
                    "type": "MutationObserver"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "MutationObserverInit"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 10719,
            "description": "Adds a transient observer on node. The transient observer gets removed\nnext time we deliver the change records.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "Document",
            "module": "Untitled Elements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 11263,
            "description": "Registers a custom tag name with the document.\n\nWhen a registered element is created, a `readyCallback` method is called\nin the scope of the element. The `readyCallback` method can be specified on\neither `options.prototype` or `options.lifecycle` with the latter taking\nprecedence.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "name",
                    "description": "The tag name to register. Must include a dash ('-'),\n   for example 'x-component'.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "extends",
                            "description": "(_off spec_) Tag name of an element to extend (or blank for a new\n     element). This parameter is not part of the specification, but instead\n     is a hint for the polyfill because the extendee is difficult to infer.\n     Remember that the input prototype must chain to the extended element's\n     prototype (or HTMLElement.prototype) regardless of the value of\n     `extends`.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "prototype",
                            "description": "The prototype to use for the new\n     element. The prototype must inherit from HTMLElement.",
                            "type": "Object"
                        },
                        {
                            "name": "lifecycle",
                            "description": "Callbacks that fire at important phases in the life of the custom\n     element.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     FancyButton = document.register(\"fancy-button\", {\n       extends: 'button',\n       prototype: Object.create(HTMLButtonElement.prototype, {\n         readyCallback: {\n           value: function() {\n             console.log(\"a fancy-button was created\",\n           }\n         }\n       })\n     });"
            ],
            "return": {
                "description": "Constructor for the newly registered type.",
                "type": "Function"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 11565,
            "description": "Upgrade an element to a custom element. Upgrading an element\ncauses the custom prototype to be applied, an `is` attribute \nto be attached (as needed), and invocation of the `readyCallback`.\n`upgrade` does nothing if the element is already upgraded, or\nif it matches no registered custom tag name.",
            "itemtype": "method",
            "name": "ugprade",
            "params": [
                {
                    "name": "element",
                    "description": "The element to upgrade.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "The upgraded element.",
                "type": "Element"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 11914,
            "description": "This is the constructor for new PointerEvents.\n\nNew Pointer Events must be given a type, and an optional dictionary of\ninitialization properties.\n\nDue to certain platform requirements, events returned from the constructor\nidentify as MouseEvents.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "inType",
                    "description": "The type of the event to create.",
                    "type": "String"
                },
                {
                    "name": "inDict",
                    "description": "An optional dictionary of initial event properties.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A new PointerEvent of type `inType` and initialized with properties from `inDict`.",
                "type": "Event"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 12076,
            "description": "This module implements an map of pointer states",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 12211,
            "description": "This module is for normalizing events. Mouse and Touch events will be\ncollected here, and fire PointerEvents that have the same semantics, no\nmatter the source.\nEvents fired:\n  - pointerdown: a pointing is added\n  - pointerup: a pointer is removed\n  - pointermove: a pointer is moved\n  - pointerover: a pointer crosses into an element\n  - pointerout: a pointer leaves an element\n  - pointercancel: a pointer will no longer generate events",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 12232,
            "description": "Add a new event source that will generate pointer events.\n\n`inSource` must contain an array of event names named `events`, and\nfunctions with the names specified in the `events` array.",
            "params": [
                {
                    "name": "name",
                    "description": "A name for the event source",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "A new source of platform events.",
                    "type": "Object"
                }
            ],
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 12342,
            "description": "Creates a new Event of type `inType`, based on the information in\n`inEvent`.",
            "params": [
                {
                    "name": "inType",
                    "description": "A string representing the type of event to create",
                    "type": "String"
                },
                {
                    "name": "inEvent",
                    "description": "A platform event with a target",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "A PointerEvent of type `inType`",
                "type": "Event"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 12364,
            "description": "Returns a snapshot of inEvent, with writable properties.",
            "params": [
                {
                    "name": "inEvent",
                    "description": "An event that contains properties to copy.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "An object containing shallow copies of `inEvent`'s\n   properties.",
                "type": "Object"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 12412,
            "description": "Dispatches the event to its target.",
            "params": [
                {
                    "name": "inEvent",
                    "description": "The event to be dispatched.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "True if an event handler returns true, false otherwise.",
                "type": "Boolean"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 12440,
            "description": "This module uses Mutation Observers to dynamically adjust which nodes will\ngenerate Pointer Events.\n\nAll nodes that wish to generate Pointer Events must have the attribute\n`touch-action` set to `none`.",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13069,
            "description": "This module contains the handlers for native platform events.\nFrom here, the dispatcher is called to create unified pointer events.\nIncluded are touch events (v1), mouse events, and MSPointerEvents.",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13183,
            "description": "Allows for any gesture to prevent the tap gesture.",
            "itemtype": "method",
            "name": "preventTap",
            "class": "PointerGestureEvent",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13535,
            "description": "Enable gesture events for a given scope, typically\n[ShadowRoots](https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#shadow-root-object).",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "scope",
                    "description": "A top level scope to enable gesture\nsupport on.",
                    "type": "ShadowRoot"
                }
            ],
            "class": "PointerGestures",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13576,
            "description": "Milliseconds pointer has been held down.",
            "type": "Number",
            "itemtype": "property",
            "name": "holdTime",
            "class": "hold",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13581,
            "description": "Type of pointer that made the holding event.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "hold",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13597,
            "description": "Type of pointer that made the holding event.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "released",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13688,
            "description": "Pixels moved in the x direction since trackstart.",
            "type": "Number",
            "itemtype": "property",
            "name": "dx",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13693,
            "description": "Pixes moved in the y direction since trackstart.",
            "type": "Number",
            "itemtype": "property",
            "name": "dy",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13698,
            "description": "Pixels moved in the x direction since the last track.",
            "type": "Number",
            "itemtype": "property",
            "name": "ddx",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13703,
            "description": "Pixles moved in the y direction since the last track.",
            "type": "Number",
            "itemtype": "property",
            "name": "ddy",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13708,
            "description": "The clientX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "clientX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13713,
            "description": "The clientY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "clientY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13718,
            "description": "The pageX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "pageX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13723,
            "description": "The pageY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "pageY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13728,
            "description": "The screenX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "screenX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13733,
            "description": "The screenY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "screenY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13738,
            "description": "The last x axis direction of the pointer.",
            "type": "Number",
            "itemtype": "property",
            "name": "xDirection",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13743,
            "description": "The last y axis direction of the pointer.",
            "type": "Number",
            "itemtype": "property",
            "name": "yDirection",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13748,
            "description": "A shared object between all tracking events.",
            "type": "Object",
            "itemtype": "property",
            "name": "trackInfo",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13753,
            "description": "The element currently under the pointer.",
            "type": "Element",
            "itemtype": "property",
            "name": "relatedTarget",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13758,
            "description": "The type of pointer that make the track gesture.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13892,
            "description": "Signed velocity of the flick in the x direction.",
            "itemtype": "property",
            "name": "xVelocity",
            "type": "Number",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13897,
            "description": "Signed velocity of the flick in the y direction.",
            "type": "Number",
            "itemtype": "property",
            "name": "yVelocity",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13902,
            "description": "Unsigned total velocity of the flick.",
            "type": "Number",
            "itemtype": "property",
            "name": "velocity",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13907,
            "description": "Angle of the flick in degrees, with 0 along the\npositive x axis.",
            "type": "Number",
            "itemtype": "property",
            "name": "angle",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13913,
            "description": "Axis with the greatest absolute velocity. Denoted\nwith 'x' or 'y'.",
            "type": "String",
            "itemtype": "property",
            "name": "majorAxis",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 13919,
            "description": "Type of the pointer that made the flick.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 14027,
            "description": "X axis position of the tap.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 14032,
            "description": "Y axis position of the tap.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\platform\\platform.concat.js",
            "line": 14037,
            "description": "Type of the pointer that made the tap.",
            "itemtype": "property",
            "name": "pointerType",
            "type": "String",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 23,
            "description": "Fired when a response is received.",
            "itemtype": "event",
            "name": "polymer-response",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 28,
            "description": "Fired when an error is received.",
            "itemtype": "event",
            "name": "polymer-error",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 33,
            "description": "Fired whenever a response or an error is received.",
            "itemtype": "event",
            "name": "polymer-complete",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 44,
            "description": "The URL target of the request.",
            "itemtype": "attribute",
            "name": "url",
            "type": "string",
            "default": "''",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 52,
            "description": "Specifies what data to store in the 'response' property, and\nto deliver as 'event.response' in 'response' events.\n\nOne of:\n\n   `text`: uses XHR.responseText\n   \n   `xml`: uses XHR.responseXML\n   \n   `json`: uses XHR.responseText parsed as JSON",
            "itemtype": "attribute",
            "name": "handleAs",
            "type": "string",
            "default": "'text'",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 69,
            "description": "If true, automatically performs an Ajax request when either url or params has changed.",
            "itemtype": "attribute",
            "name": "auto",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 77,
            "description": "Parameters to send to the specified URL, as JSON.",
            "itemtype": "attribute",
            "name": "params",
            "type": "string (JSON)",
            "default": "''",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 85,
            "description": "Returns the response object.",
            "itemtype": "attribute",
            "name": "response",
            "type": "Object",
            "default": "null",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 93,
            "description": "The HTTP method to use such as 'GET', 'POST', 'PUT', 'DELETE'.\nDefault is 'GET'.",
            "itemtype": "attribute",
            "name": "method",
            "type": "string",
            "default": "''",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-ajax.html",
            "line": 171,
            "description": "Performs an Ajax request to the url specified.",
            "itemtype": "method",
            "name": "go",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ajax\\polymer-xhr.html",
            "line": 57,
            "description": "Sends a HTTP request to the server and returns the XHR object.",
            "itemtype": "method",
            "name": "request",
            "params": [
                {
                    "name": "inOptions",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "The url to which the request is sent.",
                            "type": "String"
                        },
                        {
                            "name": "method",
                            "description": "The HTTP method to use, default is GET.",
                            "type": "String"
                        },
                        {
                            "name": "sync",
                            "description": "By default, all requests are sent asynchronously.\n       To send synchronous requests, set to true.",
                            "type": "Boolean"
                        },
                        {
                            "name": "params",
                            "description": "Data to be sent to the server.",
                            "type": "Object"
                        },
                        {
                            "name": "body",
                            "description": "The content for the request body for POST method.",
                            "type": "Object"
                        },
                        {
                            "name": "headers",
                            "description": "HTTP request headers.",
                            "type": "Object"
                        },
                        {
                            "name": "responseType",
                            "description": "The response type. Default is 'text'.",
                            "type": "String"
                        },
                        {
                            "name": "callback",
                            "description": "Called when request is completed.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "return": {
                "description": "XHR object.",
                "type": "Object"
            },
            "class": "polymer-xhr",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-anchor-point\\polymer-anchor-point.html",
            "line": 154,
            "description": "The node to be positioned.",
            "itemtype": "attribute",
            "name": "target",
            "type": "Node",
            "class": "polymer-anchor-point",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-anchor-point\\polymer-anchor-point.html",
            "line": 160,
            "description": "The node to align the target to.",
            "itemtype": "attribute",
            "name": "anchor",
            "type": "node",
            "class": "polymer-anchor-point",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation-group.html",
            "line": 18,
            "description": "If specified the target will be assigned to all child animations.",
            "itemtype": "property",
            "name": "target",
            "type": "HTMLElement|Node",
            "default": "null",
            "class": "polymer-animation-group",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation-group.html",
            "line": 25,
            "description": "If specified and not \"auto\" the duration will apply to the group\nand propagate to any child animations that is not a group and does\nnot specify a duration.",
            "itemtype": "property",
            "name": "duration",
            "type": "number",
            "default": "\"auto\"",
            "class": "polymer-animation-group",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation-group.html",
            "line": 34,
            "description": "Group type. 'par' for parallel and 'seq' for sequence.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'par'",
            "class": "polymer-animation-group",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation-keyframe.html",
            "line": 10,
            "description": "From 0 to 1.",
            "itemtype": "property",
            "name": "offset",
            "type": "Number",
            "class": "polymer-animation-keyframe",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation-prop.html",
            "line": 8,
            "description": "CSS property name.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "required": 1,
            "class": "polymer-animation-prop",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation-prop.html",
            "line": 14,
            "description": "CSS property value.",
            "itemtype": "property",
            "name": "value",
            "required": 1,
            "class": "polymer-animation-prop",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 48,
            "description": "Fired when the animation starts",
            "itemtype": "event",
            "name": "polymer-animation-change",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 60,
            "description": "One or more nodes to animate.",
            "itemtype": "property",
            "name": "target",
            "type": "HTMLElement|Node|Array<HTMLElement|Node>",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 66,
            "description": "Selector for the node being animated.",
            "itemtype": "property",
            "name": "targetSelector",
            "type": "String",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 73,
            "description": "Animation keyframes specified as an array of dictionaries of\n&lt;css properties&gt;:&lt;array of values&gt; pairs. For example,",
            "itemtype": "property",
            "name": "keyframes",
            "type": "Object",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 80,
            "description": "A custom animation function. Either provide this or keyframes.",
            "itemtype": "property",
            "name": "sample",
            "type": "Function",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 87,
            "description": "The composition behavior. \"replace\", \"add\" or \"merge\".",
            "itemtype": "property",
            "name": "composite",
            "type": "\"replace\"|\"add\"|\"merge\"",
            "default": "\"replace\"",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 95,
            "description": "Animation duration in milliseconds, 'infinity' or 'auto'. 'auto'\nmeans use the animation's intrinsic duration.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number|\"Infinity\"|\"auto\"",
            "default": "\"auto\"",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 103,
            "description": "\"none\", \"forwards\", \"backwards\", \"both\" or \"auto\". When set to\n\"auto\", the fillMode is \"none\" for a polymer-animation and \"both\"\nfor a polymer-animation-group.",
            "itemtype": "property",
            "name": "fillMode",
            "type": "\"none\"|\"forwards\"|\"backwards\"|\"both\"|\"auto\"",
            "default": "\"auto\"",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 112,
            "description": "A transition timing function.",
            "itemtype": "property",
            "name": "easing",
            "type": "\"linear\"|\"ease\"|\"ease-in\"|\"ease-out\"|\"ease-in-out\"|\n    \"step-start\"|\"step-middle\"|\"step-end\"",
            "default": "\"linear\"",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 120,
            "description": "Number of iterations into the timed item in which to begin\nthe animation. e.g. 0.5 will cause the animation to begin\nhalfway through the first iteration.",
            "itemtype": "property",
            "name": "iterationStart",
            "type": "Number",
            "default": "0",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 129,
            "itemtype": "property",
            "name": "iterationCount",
            "type": "Number|'Infinity'",
            "default": "1",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 135,
            "description": "Delay in milliseconds.",
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "default": "0",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 142,
            "itemtype": "property",
            "name": "direction",
            "type": "\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"",
            "default": "\"normal\"",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 148,
            "itemtype": "property",
            "name": "autoplay",
            "type": "Boolean",
            "default": "false",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 171,
            "description": "Plays the animation.",
            "itemtype": "method",
            "name": "play",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-animation\\polymer-animation.html",
            "line": 182,
            "description": "Stops the animation.",
            "itemtype": "method",
            "name": "cancel",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 46,
            "description": "The id of the target element.",
            "itemtype": "attribute",
            "name": "targetId",
            "type": "string",
            "default": "''",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 54,
            "description": "The target element.",
            "itemtype": "attribute",
            "name": "target",
            "type": "object",
            "default": "null",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 62,
            "description": "If true, the orientation is horizontal; otherwise is vertical.",
            "itemtype": "attribute",
            "name": "horizontal",
            "type": "boolean",
            "default": "false",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 70,
            "description": "If true, the target element is hidden/collapsed.",
            "itemtype": "attribute",
            "name": "closed",
            "type": "boolean",
            "default": "false",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 78,
            "description": "Collapsing/expanding animation duration in second.",
            "itemtype": "attribute",
            "name": "duration",
            "type": "number",
            "default": "0.33",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 86,
            "description": "If true, the size of the target element is fixed and is set\non the element.  Otherwise it will try to \nuse auto to determine the natural size to use\nfor collapsing/expanding.",
            "itemtype": "attribute",
            "name": "fixedSize",
            "type": "boolean",
            "default": "false",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-collapse\\polymer-collapse.html",
            "line": 148,
            "description": "Toggle the closed state of the collapsible.",
            "itemtype": "method",
            "name": "toggle",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\declaration\\styles.js",
            "line": 22,
            "description": "Install external stylesheets loaded in <element> elements into the \nelement's template.",
            "params": [
                {
                    "name": "elementElement",
                    "description": "The <element> element to style."
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\declaration\\styles.js",
            "line": 33,
            "description": "Remove all sheets from element and store for later use.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\declaration\\styles.js",
            "line": 52,
            "description": "Takes external stylesheets loaded in an <element> element and moves\ntheir content into a <style> element inside the <element>'s template.\nThe sheet is then removed from the <element>. This is done only so \nthat if the element is loaded in the main document, the sheet does\nnot become active.\nNote, ignores sheets with the attribute 'polymer-scope'.",
            "params": [
                {
                    "name": "elementElement",
                    "description": "The <element> element to style."
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\declaration\\styles.js",
            "line": 89,
            "description": "Promotes external stylesheets and <style> elements with the attribute \npolymer-scope='global' into global scope.\nThis is particularly useful for defining @keyframe rules which \ncurrently do not function in scoped or shadow style elements.\n(See wkb.ug/72462)",
            "params": [
                {
                    "name": "elementElement",
                    "description": "The <element> element to style."
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\instance\\styles.js",
            "line": 19,
            "description": "Installs external stylesheets and <style> elements with the attribute \npolymer-scope='controller' into the scope of element. This is intended\nto be a called during custom element construction. Note, this incurs a \nper instance cost and should be used sparingly.\n\nThe need for this type of styling should go away when the shadowDOM spec\naddresses these issues:\n\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21391\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21390\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21389",
            "params": [
                {
                    "name": "element",
                    "description": "The custom element instance into whose controller (parent)\nscope styles will be installed."
                },
                {
                    "name": "elementElement",
                    "description": "The <element> containing controller styles."
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\instance\\utils.js",
            "line": 9,
            "description": "Invokes a function asynchronously. The context of the callback\nfunction is bound to 'this' automatically.",
            "itemtype": "method",
            "name": "async",
            "params": [
                {
                    "name": "method",
                    "description": "",
                    "type": "Function|String"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Any|Array"
                },
                {
                    "name": "timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\instance\\utils.js",
            "line": 30,
            "description": "Fire an event.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "type",
                    "description": "An event name.",
                    "type": "String"
                },
                {
                    "name": "detail",
                    "description": ""
                },
                {
                    "name": "toNode",
                    "description": "Target node.",
                    "type": "Node"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\instance\\utils.js",
            "line": 47,
            "description": "Fire an event asynchronously.",
            "itemtype": "method",
            "name": "asyncFire",
            "params": [
                {
                    "name": "type",
                    "description": "An event name.",
                    "type": "String"
                },
                {
                    "name": "detail",
                    "description": ""
                },
                {
                    "name": "toNode",
                    "description": "Target node.",
                    "type": "Node"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\src\\instance\\utils.js",
            "line": 57,
            "description": "Remove class from old, add class to anew, if they exist",
            "params": [
                {
                    "name": "classFollows",
                    "description": ""
                },
                {
                    "name": "anew",
                    "description": "A node."
                },
                {
                    "name": "old",
                    "description": "A node"
                },
                {
                    "name": "className",
                    "description": ""
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1126,
            "description": "Splice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1140,
            "description": "Lacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1625,
            "params": [
                {
                    "name": "nativeConstructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "wrapperConstructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "opt_instance",
                    "description": "If present, this is used to extract\n    properties from an instance object.",
                    "type": "Object="
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1654,
            "description": "Creates a generic wrapper constructor based on |object| and its\nconstructor.\nSometimes the constructor does not have an associated instance\n(CharacterData for example). In that case you can pass the constructor that\nyou want to map the object to using |opt_nativeConstructor|.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "opt_nativeConstructor",
                    "description": "",
                    "type": "Function="
                }
            ],
            "return": {
                "description": "The generated constructor.",
                "type": "Function"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1714,
            "description": "Wraps a node in a WrapperNode. If there already exists a wrapper for the\n|node| that wrapper is returned instead.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "",
                "type": "WrapperNode"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1729,
            "description": "Unwraps a wrapper and returns the node it is wrapping.",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "WrapperNode"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1741,
            "description": "Unwraps object if it is a wrapper.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The native implementation object.",
                "type": "Object"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1750,
            "description": "Wraps object if it is not a wrapper.",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The wrapper for object.",
                "type": "Object"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1759,
            "description": "Overrides the current wrapper (if any) for node.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "wrapper",
                    "description": "If left out the wrapper will be created as\n    needed next time someone wraps the node.",
                    "type": "WrapperNode="
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 1787,
            "description": "Forwards existing methods on the native object to the wrapper methods.\nThis does not wrap any of the arguments or the return value since the\nwrapper implementation already takes care of that.",
            "params": [
                {
                    "name": "constructors",
                    "description": "",
                    "type": "Array.<Function>"
                }
            ],
            "parem": "{Array.<string>} names",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2204,
            "description": "Creates a new Event wrapper or wraps an existin native Event object.",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String|Event"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object="
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2339,
            "description": "Constructs a new native event.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2399,
            "description": "This represents a wrapper for an EventTarget.",
            "params": [
                {
                    "name": "impl",
                    "description": "The original event target.",
                    "type": "!EventTarget"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2506,
            "description": "Returns a function that is to be used as a getter for `onfoo` properties.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2519,
            "description": "Returns a function that is to be used as a setter for `onfoo` properties.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2641,
            "description": "Collects nodes from a DocumentFragment or a Node for removal followed\nby an insertion.\n\nThis updates the internal pointers for node, previousNode and nextNode.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2770,
            "description": "This represents a wrapper of a native DOM node.",
            "params": [
                {
                    "name": "original",
                    "description": "The original DOM node, aka, the visual DOM node.",
                    "type": "!Node"
                }
            ],
            "is_constructor": 1,
            "extends": "{EventTarget}",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2785,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2791,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2797,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2803,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2809,
            "type": "{Node|undefined}",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2983,
            "description": "Called after a node was added. Subclasses override this to invalidate\nthe renderer as needed.",
            "access": "private",
            "tagname": "",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 2998,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 3005,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 3011,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 3017,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 3023,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 3380,
            "description": "Useful for generating the accessor pair for a property that reflects an\nattribute.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4022,
            "description": "Updates the fields of a wrapper to a snapshot of the logical DOM as needed.\nUp means parentNode\nSideways means previous and next sibling.",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "!Node"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4034,
            "description": "Updates the fields of a wrapper to a snapshot of the logical DOM as needed.\nDown means first and last child",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "!Node"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4133,
            "description": "Visits all nodes in the tree that fulfils the |predicate|. If the |visitor|\nfunction returns |false| the traversal is aborted.",
            "params": [
                {
                    "name": "tree",
                    "description": "",
                    "type": "!Node"
                },
                {
                    "name": "predicate",
                    "description": "",
                    "type": "Function(!Node) : boolean"
                },
                {
                    "name": "visitor",
                    "description": "",
                    "type": "Function(!Node) : *"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4178,
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Element"
                }
            ],
            "oaram": "{Element} point The insertion point element.",
            "return": {
                "description": "Whether the node matches the insertion point.",
                "type": "Boolean"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4233,
            "description": "Returns existing shadow renderer for a host or creates it if it is needed.",
            "params": [
                {
                    "name": "host",
                    "description": "",
                    "type": "!Element"
                }
            ],
            "return": {
                "description": "",
                "type": "!ShadowRenderer"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4264,
            "description": "RenderNode is used as an in memory \"render tree\". When we render the\ncomposed tree we create a tree of RenderNodes, then we diff this against\nthe real DOM tree and make minimal changes as needed.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4454,
            "description": "Invalidates the attributes used to keep track of which attributes may\ncause the renderer to be invalidated.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4462,
            "description": "Parses the selector and makes this renderer dependent on the attribute\nbeing used in the selector.",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 4616,
            "description": "This gets called when a node was added or removed to it.",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 7130,
            "description": "This represents a <template> element.",
            "is_constructor": 1,
            "extends": "{HTMLElement}",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 7210,
            "description": "Ensures proper API and content model for template elements.",
            "params": [
                {
                    "name": "opt_instanceRef",
                    "description": "The template element which\n    |el| template element will return as the value of its ref(), and whose\n    content will be used as source when createInstance() is invoked.",
                    "type": "HTMLTemplateElement"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 9513,
            "description": "Converts a style property name to a css property name. For example:\n\"WebkitUserSelect\" to \"-webkit-user-select\"",
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10260,
            "description": "Schedules |dispatchCallback| to be called in the future.",
            "params": [
                {
                    "name": "observer",
                    "description": "",
                    "type": "MutationObserver"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10322,
            "description": "This function is used for the \"For each registered observer observer (with\nobserver's options as options) in target's list of registered observers,\nrun these substeps:\" and the \"For each ancestor ancestor of target, and for\neach registered observer observer (with options options) in ancestor's list\nof registered observers, run these substeps:\" part of the algorithms. The\n|options.subtree| is checked to ensure that the callback is called\ncorrectly.",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function(MutationObserverInit):MutationRecord"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10357,
            "description": "The class that maps to the DOM MutationObserver interface.",
            "params": [
                {
                    "name": "callback.",
                    "description": "",
                    "type": "Function"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10445,
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10477,
            "description": "Creates a record without |oldValue| and caches it as |currentRecord| for\nlater use.",
            "params": [
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "MutationRecord"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10487,
            "description": "Gets or creates a record with |oldValue| based in the |currentRecord|",
            "params": [
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "MutationRecord"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10504,
            "params": [
                {
                    "name": "record",
                    "description": "",
                    "type": "MutationRecord"
                }
            ],
            "return": {
                "description": "Whether the record represents a record from the current\nmutation event.",
                "type": "Boolean"
            },
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10513,
            "description": "Selects which record, if any, to replace the last record in the queue.\nThis returns |null| if no record should be replaced.",
            "params": [
                {
                    "name": "lastRecord",
                    "description": "",
                    "type": "MutationRecord"
                },
                {
                    "name": "newRecord",
                    "description": "",
                    "type": "MutationRecord"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "MutationRecord"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10533,
            "description": "Class used to represent a registered observer.",
            "params": [
                {
                    "name": "observer",
                    "description": "",
                    "type": "MutationObserver"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "MutationObserverInit"
                }
            ],
            "is_constructor": 1,
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 10608,
            "description": "Adds a transient observer on node. The transient observer gets removed\nnext time we deliver the change records.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "Document",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 11152,
            "description": "Registers a custom tag name with the document.\n\nWhen a registered element is created, a `readyCallback` method is called\nin the scope of the element. The `readyCallback` method can be specified on\neither `options.prototype` or `options.lifecycle` with the latter taking\nprecedence.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "name",
                    "description": "The tag name to register. Must include a dash ('-'),\n   for example 'x-component'.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "extends",
                            "description": "(_off spec_) Tag name of an element to extend (or blank for a new\n     element). This parameter is not part of the specification, but instead\n     is a hint for the polyfill because the extendee is difficult to infer.\n     Remember that the input prototype must chain to the extended element's\n     prototype (or HTMLElement.prototype) regardless of the value of\n     `extends`.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "prototype",
                            "description": "The prototype to use for the new\n     element. The prototype must inherit from HTMLElement.",
                            "type": "Object"
                        },
                        {
                            "name": "lifecycle",
                            "description": "Callbacks that fire at important phases in the life of the custom\n     element.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     FancyButton = document.register(\"fancy-button\", {\n       extends: 'button',\n       prototype: Object.create(HTMLButtonElement.prototype, {\n         readyCallback: {\n           value: function() {\n             console.log(\"a fancy-button was created\",\n           }\n         }\n       })\n     });"
            ],
            "return": {
                "description": "Constructor for the newly registered type.",
                "type": "Function"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 11451,
            "description": "Upgrade an element to a custom element. Upgrading an element\ncauses the custom prototype to be applied, an `is` attribute \nto be attached (as needed), and invocation of the `readyCallback`.\n`upgrade` does nothing if the element is already upgraded, or\nif it matches no registered custom tag name.",
            "itemtype": "method",
            "name": "ugprade",
            "params": [
                {
                    "name": "element",
                    "description": "The element to upgrade.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "The upgraded element.",
                "type": "Element"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 11800,
            "description": "This is the constructor for new PointerEvents.\n\nNew Pointer Events must be given a type, and an optional dictionary of\ninitialization properties.\n\nDue to certain platform requirements, events returned from the constructor\nidentify as MouseEvents.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "inType",
                    "description": "The type of the event to create.",
                    "type": "String"
                },
                {
                    "name": "inDict",
                    "description": "An optional dictionary of initial event properties.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A new PointerEvent of type `inType` and initialized with properties from `inDict`.",
                "type": "Event"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 11962,
            "description": "This module implements an ordered list of pointer states\nEach pointer object here has two properties:\n - id: the id of the pointer\n - event: the source event of the pointer, complete with positions\n\nThe ordering of the pointers is from oldest pointer to youngest pointer,\nwhich allows for multi-pointer gestures to not rely on the actual ids\nimported from the source events.\n\nAny operation that needs to store state information about pointers can hang\nobjects off of the pointer in the pointermap. This information will be\npreserved until the pointer is removed from the pointermap.",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 12104,
            "description": "This module is for normalizing events. Mouse and Touch events will be\ncollected here, and fire PointerEvents that have the same semantics, no\nmatter the source.\nEvents fired:\n  - pointerdown: a pointing is added\n  - pointerup: a pointer is removed\n  - pointermove: a pointer is moved\n  - pointerover: a pointer crosses into an element\n  - pointerout: a pointer leaves an element\n  - pointercancel: a pointer will no longer generate events",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 12125,
            "description": "Add a new event source that will generate pointer events.\n\n`inSource` must contain an array of event names named `events`, and\nfunctions with the names specified in the `events` array.",
            "params": [
                {
                    "name": "name",
                    "description": "A name for the event source",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "A new source of platform events.",
                    "type": "Object"
                }
            ],
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 12235,
            "description": "Creates a new Event of type `inType`, based on the information in\n`inEvent`.",
            "params": [
                {
                    "name": "inType",
                    "description": "A string representing the type of event to create",
                    "type": "String"
                },
                {
                    "name": "inEvent",
                    "description": "A platform event with a target",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "A PointerEvent of type `inType`",
                "type": "Event"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 12257,
            "description": "Returns a snapshot of inEvent, with writable properties.",
            "params": [
                {
                    "name": "inEvent",
                    "description": "An event that contains properties to copy.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "An object containing shallow copies of `inEvent`'s\n   properties.",
                "type": "Object"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 12305,
            "description": "Dispatches the event to its target.",
            "params": [
                {
                    "name": "inEvent",
                    "description": "The event to be dispatched.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "True if an event handler returns true, false otherwise.",
                "type": "Boolean"
            },
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 12333,
            "description": "This module uses Mutation Observers to dynamically adjust which nodes will\ngenerate Pointer Events.\n\nAll nodes that wish to generate Pointer Events must have the attribute\n`touch-action` set to `none`.",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 12962,
            "description": "This module contains the handlers for native platform events.\nFrom here, the dispatcher is called to create unified pointer events.\nIncluded are touch events (v1), mouse events, and MSPointerEvents.",
            "class": "Document",
            "module": "CustomElements"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13076,
            "description": "Allows for any gesture to prevent the tap gesture.",
            "itemtype": "method",
            "name": "preventTap",
            "class": "PointerGestureEvent",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13428,
            "description": "Enable gesture events for a given scope, typically\n[ShadowRoots](https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#shadow-root-object).",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "scope",
                    "description": "A top level scope to enable gesture\nsupport on.",
                    "type": "ShadowRoot"
                }
            ],
            "class": "PointerGestures",
            "module": "PointerGestures"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13469,
            "description": "Milliseconds pointer has been held down.",
            "type": "Number",
            "itemtype": "property",
            "name": "holdTime",
            "class": "hold",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13474,
            "description": "Type of pointer that made the holding event.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "hold",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13490,
            "description": "Type of pointer that made the holding event.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "released",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13581,
            "description": "Pixels moved in the x direction since trackstart.",
            "type": "Number",
            "itemtype": "property",
            "name": "dx",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13586,
            "description": "Pixes moved in the y direction since trackstart.",
            "type": "Number",
            "itemtype": "property",
            "name": "dy",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13591,
            "description": "Pixels moved in the x direction since the last track.",
            "type": "Number",
            "itemtype": "property",
            "name": "ddx",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13596,
            "description": "Pixles moved in the y direction since the last track.",
            "type": "Number",
            "itemtype": "property",
            "name": "ddy",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13601,
            "description": "The clientX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "clientX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13606,
            "description": "The clientY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "clientY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13611,
            "description": "The pageX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "pageX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13616,
            "description": "The pageY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "pageY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13621,
            "description": "The screenX position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "screenX",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13626,
            "description": "The screenY position of the track gesture.",
            "type": "Number",
            "itemtype": "property",
            "name": "screenY",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13631,
            "description": "The last x axis direction of the pointer.",
            "type": "Number",
            "itemtype": "property",
            "name": "xDirection",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13636,
            "description": "The last y axis direction of the pointer.",
            "type": "Number",
            "itemtype": "property",
            "name": "yDirection",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13641,
            "description": "A shared object between all tracking events.",
            "type": "Object",
            "itemtype": "property",
            "name": "trackInfo",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13646,
            "description": "The type of pointer that make the track gesture.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "trackstart",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13784,
            "description": "Signed velocity of the flick in the x direction.",
            "itemtype": "property",
            "name": "xVelocity",
            "type": "Number",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13789,
            "description": "Signed velocity of the flick in the y direction.",
            "type": "Number",
            "itemtype": "property",
            "name": "yVelocity",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13794,
            "description": "Unsigned total velocity of the flick.",
            "type": "Number",
            "itemtype": "property",
            "name": "velocity",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13799,
            "description": "Angle of the flick in degrees, with 0 along the\npositive x axis.",
            "type": "Number",
            "itemtype": "property",
            "name": "angle",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13805,
            "description": "Axis with the greatest absolute velocity. Denoted\nwith 'x' or 'y'.",
            "type": "String",
            "itemtype": "property",
            "name": "majorAxis",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13811,
            "description": "Type of the pointer that made the flick.",
            "type": "String",
            "itemtype": "property",
            "name": "pointerType",
            "class": "flick",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13919,
            "description": "X axis position of the tap.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13924,
            "description": "Y axis position of the tap.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 13929,
            "description": "Type of the pointer that made the tap.",
            "itemtype": "property",
            "name": "pointerType",
            "type": "String",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 14417,
            "description": "Invokes a function asynchronously. The context of the callback\nfunction is bound to 'this' automatically.",
            "itemtype": "method",
            "name": "async",
            "params": [
                {
                    "name": "method",
                    "description": "",
                    "type": "Function|String"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Any|Array"
                },
                {
                    "name": "timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 14438,
            "description": "Fire an event.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "type",
                    "description": "An event name.",
                    "type": "String"
                },
                {
                    "name": "detail",
                    "description": ""
                },
                {
                    "name": "toNode",
                    "description": "Target node.",
                    "type": "Node"
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 14455,
            "description": "Fire an event asynchronously.",
            "itemtype": "method",
            "name": "asyncFire",
            "params": [
                {
                    "name": "type",
                    "description": "An event name.",
                    "type": "String"
                },
                {
                    "name": "detail",
                    "description": ""
                },
                {
                    "name": "toNode",
                    "description": "Target node.",
                    "type": "Node"
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 14465,
            "description": "Remove class from old, add class to anew, if they exist",
            "params": [
                {
                    "name": "classFollows",
                    "description": ""
                },
                {
                    "name": "anew",
                    "description": "A node."
                },
                {
                    "name": "old",
                    "description": "A node"
                },
                {
                    "name": "className",
                    "description": ""
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 15252,
            "description": "Installs external stylesheets and <style> elements with the attribute \npolymer-scope='controller' into the scope of element. This is intended\nto be a called during custom element construction. Note, this incurs a \nper instance cost and should be used sparingly.\n\nThe need for this type of styling should go away when the shadowDOM spec\naddresses these issues:\n\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21391\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21390\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21389",
            "params": [
                {
                    "name": "element",
                    "description": "The custom element instance into whose controller (parent)\nscope styles will be installed."
                },
                {
                    "name": "elementElement",
                    "description": "The <element> containing controller styles."
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 15377,
            "description": "Install external stylesheets loaded in <element> elements into the \nelement's template.",
            "params": [
                {
                    "name": "elementElement",
                    "description": "The <element> element to style."
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 15388,
            "description": "Remove all sheets from element and store for later use.",
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 15407,
            "description": "Takes external stylesheets loaded in an <element> element and moves\ntheir content into a <style> element inside the <element>'s template.\nThe sheet is then removed from the <element>. This is done only so \nthat if the element is loaded in the main document, the sheet does\nnot become active.\nNote, ignores sheets with the attribute 'polymer-scope'.",
            "params": [
                {
                    "name": "elementElement",
                    "description": "The <element> element to style."
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-dev\\polymer.concat.js",
            "line": 15444,
            "description": "Promotes external stylesheets and <style> elements with the attribute \npolymer-scope='global' into global scope.\nThis is particularly useful for defining @keyframe rules which \ncurrently do not function in scoped or shadow style elements.\n(See wkb.ug/72462)",
            "params": [
                {
                    "name": "elementElement",
                    "description": "The <element> element to style."
                }
            ],
            "class": "tap",
            "module": "PointerGestures",
            "submodule": "Events"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 58,
            "description": "Fired when an item&#x27;s selection state is changed. This event is fired both\nwhen an item is selected or deselected. The &#x60;isSelected&#x60; detail property\ncontains the selection state.",
            "itemtype": "event",
            "name": "polymer-select",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "isSelected",
                            "description": "true for selection and false for deselection",
                            "type": "Boolean"
                        },
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 68,
            "description": "Fired when an item element is tapped.",
            "itemtype": "event",
            "name": "polymer-activate",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 86,
            "description": "Gets or sets the selected element.  Default to use the index\nof the item element.\n\nIf you want a specific attribute value of the element to be\nused instead of index, set &quot;valueattr&quot; to that attribute name.\n\nExample:\n\n    &lt;polymer-selector valueattr=&quot;label&quot; selected=&quot;foo&quot;&gt;\n      &lt;div label=&quot;foo&quot;&gt;&lt;/div&gt;\n      &lt;div label=&quot;bar&quot;&gt;&lt;/div&gt;\n      &lt;div label=&quot;zot&quot;&gt;&lt;/div&gt;\n    &lt;/polymer-selector&gt;\n\nIn multi-selection this should be an array of values.\n\nExample:\n\n    &lt;polymer-selector id=&quot;selector&quot; valueattr=&quot;label&quot; multi&gt;\n      &lt;div label=&quot;foo&quot;&gt;&lt;/div&gt;\n      &lt;div label=&quot;bar&quot;&gt;&lt;/div&gt;\n      &lt;div label=&quot;zot&quot;&gt;&lt;/div&gt;\n    &lt;/polymer-selector&gt;\n\n    this.$.selector.selected = [&#x27;foo&#x27;, &#x27;zot&#x27;];",
            "itemtype": "attribute",
            "name": "selected",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 118,
            "description": "If true, multiple selections are allowed.",
            "itemtype": "attribute",
            "name": "multi",
            "type": "boolean",
            "default": "false",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 126,
            "description": "Specifies the attribute to be used for &quot;selected&quot; attribute.",
            "itemtype": "attribute",
            "name": "valueattr",
            "type": "string",
            "default": "&#x27;name&#x27;",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 134,
            "description": "Specifies the CSS class to be used to add to the selected element.",
            "itemtype": "attribute",
            "name": "selectedClass",
            "type": "string",
            "default": "&#x27;polymer-selected&#x27;",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 142,
            "description": "Specifies the property to be used to set on the selected element\nto indicate its active state.",
            "itemtype": "attribute",
            "name": "selectedProperty",
            "type": "string",
            "default": "&#x27;active&#x27;",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 151,
            "description": "Returns the currently selected element. In multi-selection this returns\nan array of selected elements.",
            "itemtype": "attribute",
            "name": "selectedItem",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 160,
            "description": "In single selection, this returns the model associated with the\nselected element.",
            "itemtype": "attribute",
            "name": "selectedModel",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 169,
            "description": "The target element that contains items.  If this is not set \npolymer-selector is the container.",
            "itemtype": "attribute",
            "name": "target",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 178,
            "description": "This can be used to query nodes from the target node to be used for \nselection items.  Note this only works if the &#x27;target&#x27; property is set.\n\nExample:\n\n    &lt;polymer-selector target=&quot;{{$.myForm}}&quot; itemsSelector=&quot;input[type=radio]&quot;&gt;&lt;/polymer-selector&gt;\n    &lt;form id=&quot;myForm&quot;&gt;\n      &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;red&quot;&gt; Red&lt;/label&gt; &lt;br&gt;\n      &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;green&quot;&gt; Green&lt;/label&gt; &lt;br&gt;\n      &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;blue&quot;&gt; Blue&lt;/label&gt; &lt;br&gt;\n      &lt;p&gt;color = {{color}}&lt;/p&gt;\n    &lt;/form&gt;",
            "itemtype": "attribute",
            "name": "itemSelector",
            "type": "string",
            "default": "&#x27;&#x27;",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-elements-docs\\data\\files\\.._polymer-selector_polymer-selector.html.html",
            "line": 197,
            "description": "The event that would be fired from the item element to indicate\nit is being selected.",
            "itemtype": "attribute",
            "name": "activateEvent",
            "type": "string",
            "default": "&#x27;tap&#x27;",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-expressions\\src\\polymer-expressions.js",
            "line": 404,
            "description": "Converts a style property name to a css property name. For example:\n\"WebkitUserSelect\" to \"-webkit-user-select\"",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-expressions\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-file\\polymer-file.html",
            "line": 32,
            "description": "Fired when a file read has complete.",
            "itemtype": "event",
            "name": "polymer-result",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "result",
                            "description": "The result of the read.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-file\\polymer-file.html",
            "line": 39,
            "description": "Fired if there is an error in the file read.",
            "itemtype": "event",
            "name": "polymer-error",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "error",
                            "description": "Information on the error.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-file\\polymer-file.html",
            "line": 58,
            "description": "Contains the result of a read operation.",
            "itemtype": "attribute",
            "name": "result",
            "type": "Blob|File",
            "default": "null",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-file\\polymer-file.html",
            "line": 66,
            "description": "The Blob-like object to read.",
            "itemtype": "attribute",
            "name": "blob",
            "type": "Blob|File",
            "default": "null",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-file\\polymer-file.html",
            "line": 74,
            "description": "If true, automatically performs the file read (if a blob has been set).",
            "itemtype": "attribute",
            "name": "auto",
            "type": "boolean",
            "default": "false",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-file\\polymer-file.html",
            "line": 82,
            "description": "The format the result should be returned as. One of 'arraybuffer', 'text',\n'dataurl', 'binarystring'.",
            "itemtype": "attribute",
            "name": "readas",
            "type": "string",
            "default": "'text'",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 55,
            "description": "If true, flex items are aligned vertically.",
            "itemtype": "attribute",
            "name": "vertical",
            "type": "boolean",
            "default": "false",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 62,
            "description": "Defines the default for how flex items are laid out along the cross axis on \nthe current line.  Possible values are 'start', 'center' and 'end'.",
            "itemtype": "attribute",
            "name": "align",
            "type": "string",
            "default": "''",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 70,
            "description": "Defines how flex items are laid out along the main axis on the current line.\nPossible values are 'start', 'center' and 'end'.",
            "itemtype": "attribute",
            "name": "justify",
            "type": "string",
            "default": "''",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 78,
            "description": "If true, polymer-flex-layout is the flex container.\n\nExample:\n\n    <polymer-flex-layout isContainer>\n      <div>Left</div>\n      <div flex>Main</div>\n      <div>Right</div>\n    </polymer-flex-layout>\n\n    ---------------------------------\n    |-------------------------------|\n    ||Left|       Main       |Right||\n    |-------------------------------|\n    ---------------------------------",
            "itemtype": "attribute",
            "name": "isContainer",
            "type": "boolean",
            "default": "false",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-jsonp\\polymer-jsonp.html",
            "line": 20,
            "description": "Fired when a response is received.",
            "itemtype": "event",
            "name": "polymer-response",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-jsonp\\polymer-jsonp.html",
            "line": 30,
            "description": "The URL target of the request.",
            "itemtype": "attribute",
            "name": "url",
            "type": "string",
            "default": "''",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-jsonp\\polymer-jsonp.html",
            "line": 38,
            "description": "Returns the response object.",
            "itemtype": "attribute",
            "name": "response",
            "type": "Object",
            "default": "null",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-jsonp\\polymer-jsonp.html",
            "line": 53,
            "description": "Performs a JSONP request to the url specified.",
            "itemtype": "method",
            "name": "go",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-layout\\polymer-layout.html",
            "line": 172,
            "description": "Arrange sibling nodes end-to-end in one dimension.\n\nArrangement is horizontal unless the `vertical`\nattribute is applied on this node.",
            "itemtype": "method",
            "name": "layout",
            "class": "polymer-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "line": 24,
            "description": "Fired after it is loaded from localStorage.",
            "itemtype": "event",
            "name": "polymer-localstorage-load",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "line": 42,
            "description": "The key to the data stored in localStorage.",
            "itemtype": "attribute",
            "name": "name",
            "type": "string",
            "default": "null",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "line": 50,
            "description": "The data associated with the specified name.",
            "itemtype": "attribute",
            "name": "value",
            "type": "object",
            "default": "null",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "line": 58,
            "description": "If true, the value is stored and retrieved without JSON processing.",
            "itemtype": "attribute",
            "name": "useRaw",
            "type": "boolean",
            "default": "false",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "line": 66,
            "description": "If true, auto save is disabled.",
            "itemtype": "attribute",
            "name": "autoSaveDisabled",
            "type": "boolean",
            "default": "false",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-localstorage\\polymer-localstorage.html",
            "line": 97,
            "description": "Saves the value to localStorage.",
            "itemtype": "method",
            "name": "save",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-media-query\\polymer-media-query.html",
            "line": 38,
            "description": "The Boolean return value of the media query",
            "itemtype": "attribute",
            "name": "queryMatches",
            "type": "Boolean",
            "default": "false",
            "class": "polymer-media-query",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-media-query\\polymer-media-query.html",
            "line": 45,
            "description": "The CSS media query to evaulate",
            "itemtype": "attribute",
            "name": "query",
            "type": "string",
            "default": "''",
            "class": "polymer-media-query",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 63,
            "description": "Fired when the polymer-overlay opened property is set.",
            "itemtype": "event",
            "name": "polymer-overlay-open",
            "params": [
                {
                    "name": "inDetail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "opened",
                            "description": "the opened state",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 134,
            "description": "The target element.",
            "itemtype": "attribute",
            "name": "target",
            "type": "Object",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 141,
            "description": "Set opened to true to show an overlay and to false to hide it.\nA polymer-overlay may be made intially opened by setting its\nopened attribute.",
            "itemtype": "attribute",
            "name": "opened",
            "type": "boolean",
            "default": "false",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 150,
            "description": "By default an overlay will close automatically if the user\ntaps outside it or presses the escape key. Disable this\nbehavior by setting the autoCloseDisabled property to true.",
            "itemtype": "attribute",
            "name": "autoCloseDisabled",
            "type": "boolean",
            "default": "false",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 159,
            "description": "This property specifies the animation to play when the overlay is\nopened/closed. It can be an array of two animations\n[opening, closing], a single animation, an array of two strings, or\na string. The strings should the tag names of custom elements\ndescending from a polymer-animation. In the case of a single\nanimation the closing animation is the opening animation played\nbackwards.",
            "itemtype": "attribute",
            "name": "transitions",
            "type": "Array&lt;string>",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 185,
            "description": "Toggle the opened state of the overlay.",
            "itemtype": "method",
            "name": "toggle",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-overlay\\polymer-overlay.html",
            "line": 351,
            "description": "Extensions of polymer-overlay should implement the resizeHandler\nmethod to adjust the size and position of the overlay when the \nbrowser window resizes.",
            "itemtype": "method",
            "name": "resizeHandler",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-scrub\\polymer-scrub.html",
            "line": 3,
            "description": "TODO:\n  - add easing to snap\n  - test delay\n  - multiple iterations for input animation\n  - test CustomEffect",
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selection\\polymer-selection.html",
            "line": 59,
            "description": "Fired when an item's selection state is changed. This event is fired both\nwhen an item is selected or deselected. The `isSelected` detail property\ncontains the selection state.",
            "itemtype": "event",
            "name": "polymer-select",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "isSelected",
                            "description": "true for selection and false for deselection",
                            "type": "Boolean"
                        },
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selection\\polymer-selection.html",
            "line": 82,
            "description": "If true, multiple selections are allowed.",
            "itemtype": "attribute",
            "name": "multi",
            "type": "boolean",
            "default": "false",
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selection\\polymer-selection.html",
            "line": 96,
            "description": "Retrieves the selected item(s).",
            "itemtype": "method",
            "name": "getSelection",
            "return": {
                "description": "Returns the selected item(s). If the multi property is true,\ngetSelection will return an array, otherwise it will return \nthe selected item or undefined if there is no selection."
            },
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selection\\polymer-selection.html",
            "line": 106,
            "description": "Indicates if a given item is selected.",
            "itemtype": "method",
            "name": "isSelected",
            "params": [
                {
                    "name": "item",
                    "description": "The item whose selection state should be checked.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "Returns true if `item` is selected."
            },
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selection\\polymer-selection.html",
            "line": 128,
            "description": "Set the selection state for a given `item`. If the multi property\nis true, then the selected state of `item` will be toggled; otherwise\nthe `item` will be selected.",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "item:",
                    "description": "The item to select.",
                    "type": "Any"
                }
            ],
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selection\\polymer-selection.html",
            "line": 143,
            "description": "Toggles the selection state for `item`.",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "item:",
                    "description": "The item to toggle.",
                    "type": "Any"
                }
            ],
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 42,
            "description": "Fired when an item's selection state is changed. This event is fired both\nwhen an item is selected or deselected. The `isSelected` detail property\ncontains the selection state.",
            "itemtype": "event",
            "name": "polymer-select",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "isSelected",
                            "description": "true for selection and false for deselection",
                            "type": "Boolean"
                        },
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 52,
            "description": "Fired when an item element is tapped.",
            "itemtype": "event",
            "name": "polymer-activate",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 70,
            "description": "Gets or sets the selected element.  Default to use the index\nof the item element.\n\nIf you want a specific attribute value of the element to be\nused instead of index, set \"valueattr\" to that attribute name.\n\nExample:\n\n    <polymer-selector valueattr=\"label\" selected=\"foo\">\n      <div label=\"foo\"></div>\n      <div label=\"bar\"></div>\n      <div label=\"zot\"></div>\n    </polymer-selector>\n\nIn multi-selection this should be an array of values.\n\nExample:\n\n    <polymer-selector id=\"selector\" valueattr=\"label\" multi>\n      <div label=\"foo\"></div>\n      <div label=\"bar\"></div>\n      <div label=\"zot\"></div>\n    </polymer-selector>\n\n    this.$.selector.selected = ['foo', 'zot'];",
            "itemtype": "attribute",
            "name": "selected",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 102,
            "description": "If true, multiple selections are allowed.",
            "itemtype": "attribute",
            "name": "multi",
            "type": "boolean",
            "default": "false",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 110,
            "description": "Specifies the attribute to be used for \"selected\" attribute.",
            "itemtype": "attribute",
            "name": "valueattr",
            "type": "string",
            "default": "'name'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 118,
            "description": "Specifies the CSS class to be used to add to the selected element.",
            "itemtype": "attribute",
            "name": "selectedClass",
            "type": "string",
            "default": "'polymer-selected'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 126,
            "description": "Specifies the property to be used to set on the selected element\nto indicate its active state.",
            "itemtype": "attribute",
            "name": "selectedProperty",
            "type": "string",
            "default": "'active'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 135,
            "description": "Returns the currently selected element. In multi-selection this returns\nan array of selected elements.",
            "itemtype": "attribute",
            "name": "selectedItem",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 144,
            "description": "In single selection, this returns the model associated with the\nselected element.",
            "itemtype": "attribute",
            "name": "selectedModel",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 153,
            "description": "The target element that contains items.  If this is not set \npolymer-selector is the container.",
            "itemtype": "attribute",
            "name": "target",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 162,
            "description": "This can be used to query nodes from the target node to be used for \nselection items.  Note this only works if the 'target' property is set.\n\nExample:\n\n    <polymer-selector target=\"{{$.myForm}}\" itemsSelector=\"input[type=radio]\"></polymer-selector>\n    <form id=\"myForm\">\n      <label><input type=\"radio\" name=\"color\" value=\"red\"> Red</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"green\"> Green</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"blue\"> Blue</label> <br>\n      <p>color = {{color}}</p>\n    </form>",
            "itemtype": "attribute",
            "name": "itemSelector",
            "type": "string",
            "default": "''",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-selector\\polymer-selector.html",
            "line": 181,
            "description": "The event that would be fired from the item element to indicate\nit is being selected.",
            "itemtype": "attribute",
            "name": "activateEvent",
            "type": "string",
            "default": "'tap'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-animated-pages\\polymer-ui-animated-pages.html",
            "line": 20,
            "description": "Fired when the transition animation ends",
            "itemtype": "attribute",
            "name": "directional",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-animated-pages",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-animated-pages\\polymer-ui-animated-pages.html",
            "line": 43,
            "description": "This property specifies the animation to play during a page\ntransition.\n\nIf the property is a polymer-animation-group, it should contain at\nleast two animations. The first animation will target the the page\nit's transitioning away from, and the second animation will target\nthe page it's transitioning to.\n\nIf the property is a string, it should be the tag name of a custom\nelement that extends from polymer-animation-group that fits the\nabove requirements.",
            "itemtype": "attribute",
            "name": "transition",
            "type": "string",
            "class": "polymer-ui-animated-pages",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 46,
            "description": "Direction of the arrow.  Possible values are 'up', 'down', 'left' \nand 'right'.",
            "itemtype": "attribute",
            "name": "direction",
            "type": "string",
            "default": "'up'",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 55,
            "description": "Size of the arrow.",
            "itemtype": "attribute",
            "name": "size",
            "type": "number",
            "default": "10",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 63,
            "description": "Color of the arrow.",
            "itemtype": "attribute",
            "name": "color",
            "type": "string",
            "default": "'#fff'",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 71,
            "description": "Border color.",
            "itemtype": "attribute",
            "name": "borderColor",
            "type": "string",
            "default": "'#ccc'",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 79,
            "description": "Arrow border width.",
            "itemtype": "attribute",
            "name": "borderWidth",
            "type": "number",
            "default": "1",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "line": 28,
            "description": "An array of objects describing the content for breadcrumbs.\n\nExample:\n\n    this.crumbs = [\n      {label: 'Overview'}, \n      {label: 'Subitem1'}, \n      {label: 'Subitem2'},\n      {label: 'Subitem3'}\n    ];",
            "itemtype": "attribute",
            "name": "crumbs",
            "type": "object",
            "default": "null",
            "class": "polymer-ui-breadcrumbs",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "line": 44,
            "description": "The index of the selected crumb.",
            "itemtype": "attribute",
            "name": "selected",
            "type": "number",
            "default": "null",
            "class": "polymer-ui-breadcrumbs",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "line": 51,
            "description": "Returns the model associated with the selected crumb.",
            "itemtype": "attribute",
            "name": "selectedCrumb",
            "type": "object",
            "default": "null",
            "class": "polymer-ui-breadcrumbs",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-card\\polymer-ui-card.html",
            "line": 22,
            "description": "Fired when the card is swiped away.",
            "itemtype": "event",
            "name": "polymer-card-swipe-away",
            "class": "polymer-ui-card",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-card\\polymer-ui-card.html",
            "line": 36,
            "description": "If true, the card can be swiped.",
            "itemtype": "attribute",
            "name": "swipeable",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-card",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "line": 43,
            "description": "If true, tapping on the header will not toggle the active state.",
            "itemtype": "attribute",
            "name": "notap",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-collapsible",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "line": 51,
            "description": "If true, the body is expanded.",
            "itemtype": "attribute",
            "name": "active",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-collapsible",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "line": 59,
            "description": "Toggle the active state of the collapsible.",
            "itemtype": "method",
            "name": "toggle",
            "class": "polymer-ui-collapsible",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 93,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 101,
            "description": "Specifies the size of the icon.",
            "itemtype": "attribute",
            "name": "size",
            "type": "string",
            "default": "24",
            "class": "polymer-ui-icon",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 109,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\metadata.html",
            "line": 27,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\metadata.html",
            "line": 34,
            "description": "If true, border is placed around the button to indicate\nactive state.",
            "itemtype": "attribute",
            "name": "active",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\metadata.html",
            "line": 42,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\metadata.html",
            "line": 52,
            "description": "If a theme is applied that includes an icon set, the index of the \nicon to display.",
            "itemtype": "attribute",
            "name": "index",
            "type": "number",
            "default": "-1",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 37,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 45,
            "description": "If true, border is placed around the button to indicate\nactive state.",
            "itemtype": "attribute",
            "name": "active",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 54,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 62,
            "description": "If a theme is applied that includes an icon set, the index of the \nicon to display.",
            "itemtype": "attribute",
            "name": "index",
            "type": "number",
            "default": "-1",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 54,
            "description": "The icon to display.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 61,
            "description": "The index of the selected menu item.",
            "itemtype": "attribute",
            "name": "selected",
            "type": "number",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 67,
            "description": "Set to true to open the menu.",
            "itemtype": "attribute",
            "name": "opened",
            "type": "boolean",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 73,
            "description": "Horizontally align the overlay with the button. Accepted values are\n[\"left\", \"center\", \"right\"].",
            "itemtype": "attribute",
            "name": "halign",
            "type": "string",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 80,
            "description": "Display the overlay on top or below the button. Accepted values are\n[\"top\", \"bottom\"].",
            "itemtype": "attribute",
            "name": "valign",
            "type": "string",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 133,
            "description": "Toggle the opened state of the dropdown.",
            "itemtype": "method",
            "name": "toggle",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 140,
            "description": "The selected menu item.",
            "itemtype": "property",
            "name": "selection",
            "type": "Node",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 20,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-menu-item",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 27,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-menu-item",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 34,
            "description": "Specifies the label for the menu item.",
            "itemtype": "attribute",
            "name": "label",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-menu-item",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html",
            "line": 29,
            "description": "The target element.",
            "itemtype": "attribute",
            "name": "target",
            "type": "object",
            "default": "null",
            "class": "polymer-ui-nav-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "line": 40,
            "description": "Number of stars to display.",
            "itemtype": "attribute",
            "name": "count",
            "type": "number",
            "default": "5",
            "class": "polymer-ui-ratings",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "line": 48,
            "description": "Number of selected stars.",
            "itemtype": "attribute",
            "name": "value",
            "type": "number",
            "default": "0",
            "class": "polymer-ui-ratings",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-sidebar\\polymer-ui-sidebar.html",
            "line": 21,
            "description": "Sidebar header label.",
            "itemtype": "attribute",
            "name": "label",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-sidebar",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html",
            "line": 16,
            "description": "Sidebar header label.",
            "itemtype": "attribute",
            "name": "label",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-sidebar-header",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "line": 43,
            "description": "Possible values are \"left\", \"right\", \"up\" and \"down\".",
            "itemtype": "attribute",
            "name": "direction",
            "type": "string",
            "default": "'left'",
            "class": "polymer-ui-splitter",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "line": 51,
            "description": "Locks the split bar so it can't be dragged.",
            "itemtype": "attribute",
            "name": "locked",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-splitter",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 34,
            "description": "Gets or sets the state, true is ON and false is OFF.",
            "itemtype": "attribute",
            "name": "value",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 42,
            "description": "If true, don't display caption.",
            "itemtype": "attribute",
            "name": "noCaption",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 50,
            "description": "Caption for on state.",
            "itemtype": "attribute",
            "name": "onCaption",
            "type": "string",
            "default": "'ON'",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 58,
            "description": "Caption for off state.",
            "itemtype": "attribute",
            "name": "offCaption",
            "type": "string",
            "default": "'OFF'",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\..\\tools\\tasks\\override-chrome-launcher.js",
            "line": 2,
            "description": "Install a fork of karma-chrome-launcher if on a Mac to launch\nChrome Canary with Harmony.",
            "class": "",
            "module": "Polymer UI Elements"
        }
    ],
    "warnings": [
        {
            "message": "param name missing: {MutationRecord}",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:292"
        },
        {
            "message": "unknown tag: oaram",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:178"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:233"
        },
        {
            "message": "unknown tag: parem",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:338"
        },
        {
            "message": "unknown tag: this",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js:53"
        },
        {
            "message": "unknown tag: parem",
            "line": " ..\\..\\platform\\platform.concat.js:1842"
        },
        {
            "message": "unknown tag: oaram",
            "line": " ..\\..\\platform\\platform.concat.js:4279"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " ..\\..\\platform\\platform.concat.js:4334"
        },
        {
            "message": "param name missing: {MutationRecord}",
            "line": " ..\\..\\platform\\platform.concat.js:10624"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ..\\..\\polymer-ajax\\polymer-xhr.html:57"
        },
        {
            "message": "unknown tag: parem",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1787"
        },
        {
            "message": "unknown tag: oaram",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4178"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4233"
        },
        {
            "message": "param name missing: {MutationRecord}",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10513"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ..\\..\\polymer-selection\\polymer-selection.html:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ..\\..\\polymer-selection\\polymer-selection.html:106"
        },
        {
            "message": "Missing item type\nSchedules |dispatchCallback| to be called in the future.",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:39"
        },
        {
            "message": "Missing item type\nThis function is used for the \"For each registered observer observer (with\nobserver's options as options) in target's list of registered observers,\nrun these substeps:\" and the \"For each ancestor ancestor of target, and for\neach registered observer observer (with options options) in ancestor's list\nof registered observers, run these substeps:\" part of the algorithms. The\n|options.subtree| is checked to ensure that the callback is called\ncorrectly.",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:101"
        },
        {
            "message": "Missing item type\nThe class that maps to the DOM MutationObserver interface.",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:136"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:224"
        },
        {
            "message": "Missing item type\nCreates a record without |oldValue| and caches it as |currentRecord| for\nlater use.",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:256"
        },
        {
            "message": "Missing item type\nGets or creates a record with |oldValue| based in the |currentRecord|",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:266"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:283"
        },
        {
            "message": "Missing item type\nSelects which record, if any, to replace the last record in the queue.\nThis returns |null| if no record should be replaced.",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:292"
        },
        {
            "message": "Missing item type\nClass used to represent a registered observer.",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:312"
        },
        {
            "message": "Missing item type\nAdds a transient observer on node. The transient observer gets removed\nnext time we deliver the change records.",
            "line": " ..\\..\\MutationObservers\\MutationObserver.js:387"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\NodeBind\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nThis is the constructor for new PointerEvents.\n\nNew Pointer Events must be given a type, and an optional dictionary of\ninitialization properties.\n\nDue to certain platform requirements, events returned from the constructor\nidentify as MouseEvents.",
            "line": " ..\\..\\PointerEvents\\src\\PointerEvent.js:7"
        },
        {
            "message": "Missing item type\nThis module is for normalizing events. Mouse and Touch events will be\ncollected here, and fire PointerEvents that have the same semantics, no\nmatter the source.\nEvents fired:\n  - pointerdown: a pointing is added\n  - pointerup: a pointer is removed\n  - pointermove: a pointer is moved\n  - pointerover: a pointer crosses into an element\n  - pointerout: a pointer leaves an element\n  - pointercancel: a pointer will no longer generate events",
            "line": " ..\\..\\PointerEvents\\src\\dispatcher.js:78"
        },
        {
            "message": "Missing item type\nAdd a new event source that will generate pointer events.\n\n`inSource` must contain an array of event names named `events`, and\nfunctions with the names specified in the `events` array.",
            "line": " ..\\..\\PointerEvents\\src\\dispatcher.js:99"
        },
        {
            "message": "Missing item type\nCreates a new Event of type `inType`, based on the information in\n`inEvent`.",
            "line": " ..\\..\\PointerEvents\\src\\dispatcher.js:209"
        },
        {
            "message": "Missing item type\nReturns a snapshot of inEvent, with writable properties.",
            "line": " ..\\..\\PointerEvents\\src\\dispatcher.js:231"
        },
        {
            "message": "Missing item type\nDispatches the event to its target.",
            "line": " ..\\..\\PointerEvents\\src\\dispatcher.js:279"
        },
        {
            "message": "Missing item type\nThis module uses Mutation Observers to dynamically adjust which nodes will\ngenerate Pointer Events.\n\nAll nodes that wish to generate Pointer Events must have the attribute\n`touch-action` set to `none`.",
            "line": " ..\\..\\PointerEvents\\src\\installer.js:7"
        },
        {
            "message": "Missing item type\nThis module contains the handlers for native platform events.\nFrom here, the dispatcher is called to create unified pointer events.\nIncluded are touch events (v1), mouse events, and MSPointerEvents.",
            "line": " ..\\..\\PointerEvents\\src\\platform-events.js:7"
        },
        {
            "message": "Missing item type\nThis module implements an map of pointer states",
            "line": " ..\\..\\PointerEvents\\src\\pointermap.js:7"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\PointerEvents\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\PointerGestures\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nUseful for generating the accessor pair for a property that reflects an\nattribute.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Element.js:84"
        },
        {
            "message": "Missing item type\nCollects nodes from a DocumentFragment or a Node for removal followed\nby an insertion.\n\nThis updates the internal pointers for node, previousNode and nextNode.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:22"
        },
        {
            "message": "Missing item type\nThis represents a wrapper of a native DOM node.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:151"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:166"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:172"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:178"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:184"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:190"
        },
        {
            "message": "Missing item type\nCalled after a node was added. Subclasses override this to invalidate\nthe renderer as needed.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:364"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:379"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:386"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:392"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:398"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\Node.js:404"
        },
        {
            "message": "Missing item type\nCreates a new Event wrapper or wraps an existin native Event object.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\events.js:381"
        },
        {
            "message": "Missing item type\nConstructs a new native event.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\events.js:516"
        },
        {
            "message": "Missing item type\nThis represents a wrapper for an EventTarget.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\events.js:576"
        },
        {
            "message": "Missing item type\nReturns a function that is to be used as a getter for `onfoo` properties.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\events.js:683"
        },
        {
            "message": "Missing item type\nReturns a function that is to be used as a setter for `onfoo` properties.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers\\events.js:696"
        },
        {
            "message": "Missing item type\nUpdates the fields of a wrapper to a snapshot of the logical DOM as needed.\nUp means parentNode\nSideways means previous and next sibling.",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:22"
        },
        {
            "message": "Missing item type\nUpdates the fields of a wrapper to a snapshot of the logical DOM as needed.\nDown means first and last child",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:34"
        },
        {
            "message": "Missing item type\nVisits all nodes in the tree that fulfils the |predicate|. If the |visitor|\nfunction returns |false| the traversal is aborted.",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:133"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:178"
        },
        {
            "message": "Missing item type\nReturns existing shadow renderer for a host or creates it if it is needed.",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:233"
        },
        {
            "message": "Missing item type\nRenderNode is used as an in memory \"render tree\". When we render the\ncomposed tree we create a tree of RenderNodes, then we diff this against\nthe real DOM tree and make minimal changes as needed.",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:264"
        },
        {
            "message": "Missing item type\nInvalidates the attributes used to keep track of which attributes may\ncause the renderer to be invalidated.",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:454"
        },
        {
            "message": "Missing item type\nParses the selector and makes this renderer dependent on the attribute\nbeing used in the selector.",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:462"
        },
        {
            "message": "Missing item type\nThis gets called when a node was added or removed to it.",
            "line": " ..\\..\\ShadowDOM\\src\\ShadowRenderer.js:616"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:176"
        },
        {
            "message": "Missing item type\nCreates a generic wrapper constructor based on |object| and its\nconstructor.\nSometimes the constructor does not have an associated instance\n(CharacterData for example). In that case you can pass the constructor that\nyou want to map the object to using |opt_nativeConstructor|.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:205"
        },
        {
            "message": "Missing item type\nWraps a node in a WrapperNode. If there already exists a wrapper for the\n|node| that wrapper is returned instead.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:265"
        },
        {
            "message": "Missing item type\nUnwraps a wrapper and returns the node it is wrapping.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:280"
        },
        {
            "message": "Missing item type\nUnwraps object if it is a wrapper.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:292"
        },
        {
            "message": "Missing item type\nWraps object if it is not a wrapper.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:301"
        },
        {
            "message": "Missing item type\nOverrides the current wrapper (if any) for node.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:310"
        },
        {
            "message": "Missing item type\nForwards existing methods on the native object to the wrapper methods.\nThis does not wrap any of the arguments or the return value since the\nwrapper implementation already takes care of that.",
            "line": " ..\\..\\ShadowDOM\\src\\wrappers.js:338"
        },
        {
            "message": "Missing item type\nCreates a deep tree, (all nodes but the leaf have 1 child)",
            "line": " ..\\..\\ShadowDOM\\test\\js\\events.js:538"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\ShadowDOM\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nThis represents a <template> element.",
            "line": " ..\\..\\TemplateBinding\\src\\TemplateBinding.js:251"
        },
        {
            "message": "Missing item type\nEnsures proper API and content model for template elements.",
            "line": " ..\\..\\TemplateBinding\\src\\TemplateBinding.js:331"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\TemplateBinding\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nauthor Christopher Blum\n   - based on the idea of Remy Sharp, http://remysharp.com/2009/01/26/element-in-view-event-plugin/\n   - forked from http://github.com/zuk/jquery.inview/",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\effects.js:196"
        },
        {
            "message": "Missing item type\nThis funtion is assigned to the <canvas> elements as element.getContext().",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js:53"
        },
        {
            "message": "Missing item type\nBinds a function to an object. The returned function will always use the\npassed in {@code obj} as {@code this}.\n\nExample:\n\n  g = bind(f, obj, a, b)\n  g(c, d) // will do f.call(obj, a, b, c, d)",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js:65"
        },
        {
            "message": "Missing item type\nPublic initializes a canvas element so that it can be used as canvas\nelement from now on. This is called automatically before the page is\nloaded but if you are creating elements using createElement you need to\nmake sure this is called on the element.",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js:132"
        },
        {
            "message": "Missing item type\nThis class implements CanvasRenderingContext2D interface as described by\nthe WHATWG.",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js:563"
        },
        {
            "message": "Missing item type\nThe text drawing function.\nThe maxWidth argument isn't taken in account, since no browser supports\nit yet.",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js:1200"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\observe-js\\benchmark\\chartjs\\site\\assets\\excanvas.js:1318"
        },
        {
            "message": "Missing item type\nSplice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "line": " ..\\..\\observe-js\\src\\observe.js:1100"
        },
        {
            "message": "Missing item type\nLacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "line": " ..\\..\\observe-js\\src\\observe.js:1114"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\observe-js\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\platform\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nCreates a deep tree, (all nodes but the leaf have 1 child)",
            "line": " ..\\..\\platform\\workbench\\ShadowDOM\\event-path.html:28"
        },
        {
            "message": "Missing item type\nSplice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "line": " ..\\..\\platform\\platform.concat.js:1167"
        },
        {
            "message": "Missing item type\nLacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "line": " ..\\..\\platform\\platform.concat.js:1181"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:1680"
        },
        {
            "message": "Missing item type\nCreates a generic wrapper constructor based on |object| and its\nconstructor.\nSometimes the constructor does not have an associated instance\n(CharacterData for example). In that case you can pass the constructor that\nyou want to map the object to using |opt_nativeConstructor|.",
            "line": " ..\\..\\platform\\platform.concat.js:1709"
        },
        {
            "message": "Missing item type\nWraps a node in a WrapperNode. If there already exists a wrapper for the\n|node| that wrapper is returned instead.",
            "line": " ..\\..\\platform\\platform.concat.js:1769"
        },
        {
            "message": "Missing item type\nUnwraps a wrapper and returns the node it is wrapping.",
            "line": " ..\\..\\platform\\platform.concat.js:1784"
        },
        {
            "message": "Missing item type\nUnwraps object if it is a wrapper.",
            "line": " ..\\..\\platform\\platform.concat.js:1796"
        },
        {
            "message": "Missing item type\nWraps object if it is not a wrapper.",
            "line": " ..\\..\\platform\\platform.concat.js:1805"
        },
        {
            "message": "Missing item type\nOverrides the current wrapper (if any) for node.",
            "line": " ..\\..\\platform\\platform.concat.js:1814"
        },
        {
            "message": "Missing item type\nForwards existing methods on the native object to the wrapper methods.\nThis does not wrap any of the arguments or the return value since the\nwrapper implementation already takes care of that.",
            "line": " ..\\..\\platform\\platform.concat.js:1842"
        },
        {
            "message": "Missing item type\nCreates a new Event wrapper or wraps an existin native Event object.",
            "line": " ..\\..\\platform\\platform.concat.js:2260"
        },
        {
            "message": "Missing item type\nConstructs a new native event.",
            "line": " ..\\..\\platform\\platform.concat.js:2395"
        },
        {
            "message": "Missing item type\nThis represents a wrapper for an EventTarget.",
            "line": " ..\\..\\platform\\platform.concat.js:2455"
        },
        {
            "message": "Missing item type\nReturns a function that is to be used as a getter for `onfoo` properties.",
            "line": " ..\\..\\platform\\platform.concat.js:2562"
        },
        {
            "message": "Missing item type\nReturns a function that is to be used as a setter for `onfoo` properties.",
            "line": " ..\\..\\platform\\platform.concat.js:2575"
        },
        {
            "message": "Missing item type\nCollects nodes from a DocumentFragment or a Node for removal followed\nby an insertion.\n\nThis updates the internal pointers for node, previousNode and nextNode.",
            "line": " ..\\..\\platform\\platform.concat.js:2697"
        },
        {
            "message": "Missing item type\nThis represents a wrapper of a native DOM node.",
            "line": " ..\\..\\platform\\platform.concat.js:2826"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:2841"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:2847"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:2853"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:2859"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:2865"
        },
        {
            "message": "Missing item type\nCalled after a node was added. Subclasses override this to invalidate\nthe renderer as needed.",
            "line": " ..\\..\\platform\\platform.concat.js:3039"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:3054"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:3061"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:3067"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:3073"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:3079"
        },
        {
            "message": "Missing item type\nUseful for generating the accessor pair for a property that reflects an\nattribute.",
            "line": " ..\\..\\platform\\platform.concat.js:3436"
        },
        {
            "message": "Missing item type\nUpdates the fields of a wrapper to a snapshot of the logical DOM as needed.\nUp means parentNode\nSideways means previous and next sibling.",
            "line": " ..\\..\\platform\\platform.concat.js:4123"
        },
        {
            "message": "Missing item type\nUpdates the fields of a wrapper to a snapshot of the logical DOM as needed.\nDown means first and last child",
            "line": " ..\\..\\platform\\platform.concat.js:4135"
        },
        {
            "message": "Missing item type\nVisits all nodes in the tree that fulfils the |predicate|. If the |visitor|\nfunction returns |false| the traversal is aborted.",
            "line": " ..\\..\\platform\\platform.concat.js:4234"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:4279"
        },
        {
            "message": "Missing item type\nReturns existing shadow renderer for a host or creates it if it is needed.",
            "line": " ..\\..\\platform\\platform.concat.js:4334"
        },
        {
            "message": "Missing item type\nRenderNode is used as an in memory \"render tree\". When we render the\ncomposed tree we create a tree of RenderNodes, then we diff this against\nthe real DOM tree and make minimal changes as needed.",
            "line": " ..\\..\\platform\\platform.concat.js:4365"
        },
        {
            "message": "Missing item type\nInvalidates the attributes used to keep track of which attributes may\ncause the renderer to be invalidated.",
            "line": " ..\\..\\platform\\platform.concat.js:4555"
        },
        {
            "message": "Missing item type\nParses the selector and makes this renderer dependent on the attribute\nbeing used in the selector.",
            "line": " ..\\..\\platform\\platform.concat.js:4563"
        },
        {
            "message": "Missing item type\nThis gets called when a node was added or removed to it.",
            "line": " ..\\..\\platform\\platform.concat.js:4717"
        },
        {
            "message": "Missing item type\nThis represents a <template> element.",
            "line": " ..\\..\\platform\\platform.concat.js:7232"
        },
        {
            "message": "Missing item type\nEnsures proper API and content model for template elements.",
            "line": " ..\\..\\platform\\platform.concat.js:7312"
        },
        {
            "message": "Missing item type\nConverts a style property name to a css property name. For example:\n\"WebkitUserSelect\" to \"-webkit-user-select\"",
            "line": " ..\\..\\platform\\platform.concat.js:9624"
        },
        {
            "message": "Missing item type\nSchedules |dispatchCallback| to be called in the future.",
            "line": " ..\\..\\platform\\platform.concat.js:10371"
        },
        {
            "message": "Missing item type\nThis function is used for the \"For each registered observer observer (with\nobserver's options as options) in target's list of registered observers,\nrun these substeps:\" and the \"For each ancestor ancestor of target, and for\neach registered observer observer (with options options) in ancestor's list\nof registered observers, run these substeps:\" part of the algorithms. The\n|options.subtree| is checked to ensure that the callback is called\ncorrectly.",
            "line": " ..\\..\\platform\\platform.concat.js:10433"
        },
        {
            "message": "Missing item type\nThe class that maps to the DOM MutationObserver interface.",
            "line": " ..\\..\\platform\\platform.concat.js:10468"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:10556"
        },
        {
            "message": "Missing item type\nCreates a record without |oldValue| and caches it as |currentRecord| for\nlater use.",
            "line": " ..\\..\\platform\\platform.concat.js:10588"
        },
        {
            "message": "Missing item type\nGets or creates a record with |oldValue| based in the |currentRecord|",
            "line": " ..\\..\\platform\\platform.concat.js:10598"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\platform\\platform.concat.js:10615"
        },
        {
            "message": "Missing item type\nSelects which record, if any, to replace the last record in the queue.\nThis returns |null| if no record should be replaced.",
            "line": " ..\\..\\platform\\platform.concat.js:10624"
        },
        {
            "message": "Missing item type\nClass used to represent a registered observer.",
            "line": " ..\\..\\platform\\platform.concat.js:10644"
        },
        {
            "message": "Missing item type\nAdds a transient observer on node. The transient observer gets removed\nnext time we deliver the change records.",
            "line": " ..\\..\\platform\\platform.concat.js:10719"
        },
        {
            "message": "Missing item type\nThis is the constructor for new PointerEvents.\n\nNew Pointer Events must be given a type, and an optional dictionary of\ninitialization properties.\n\nDue to certain platform requirements, events returned from the constructor\nidentify as MouseEvents.",
            "line": " ..\\..\\platform\\platform.concat.js:11914"
        },
        {
            "message": "Missing item type\nThis module implements an map of pointer states",
            "line": " ..\\..\\platform\\platform.concat.js:12076"
        },
        {
            "message": "Missing item type\nThis module is for normalizing events. Mouse and Touch events will be\ncollected here, and fire PointerEvents that have the same semantics, no\nmatter the source.\nEvents fired:\n  - pointerdown: a pointing is added\n  - pointerup: a pointer is removed\n  - pointermove: a pointer is moved\n  - pointerover: a pointer crosses into an element\n  - pointerout: a pointer leaves an element\n  - pointercancel: a pointer will no longer generate events",
            "line": " ..\\..\\platform\\platform.concat.js:12211"
        },
        {
            "message": "Missing item type\nAdd a new event source that will generate pointer events.\n\n`inSource` must contain an array of event names named `events`, and\nfunctions with the names specified in the `events` array.",
            "line": " ..\\..\\platform\\platform.concat.js:12232"
        },
        {
            "message": "Missing item type\nCreates a new Event of type `inType`, based on the information in\n`inEvent`.",
            "line": " ..\\..\\platform\\platform.concat.js:12342"
        },
        {
            "message": "Missing item type\nReturns a snapshot of inEvent, with writable properties.",
            "line": " ..\\..\\platform\\platform.concat.js:12364"
        },
        {
            "message": "Missing item type\nDispatches the event to its target.",
            "line": " ..\\..\\platform\\platform.concat.js:12412"
        },
        {
            "message": "Missing item type\nThis module uses Mutation Observers to dynamically adjust which nodes will\ngenerate Pointer Events.\n\nAll nodes that wish to generate Pointer Events must have the attribute\n`touch-action` set to `none`.",
            "line": " ..\\..\\platform\\platform.concat.js:12440"
        },
        {
            "message": "Missing item type\nThis module contains the handlers for native platform events.\nFrom here, the dispatcher is called to create unified pointer events.\nIncluded are touch events (v1), mouse events, and MSPointerEvents.",
            "line": " ..\\..\\platform\\platform.concat.js:13069"
        },
        {
            "message": "Missing item type\nInstall external stylesheets loaded in <element> elements into the \nelement's template.",
            "line": " ..\\..\\polymer-dev\\src\\declaration\\styles.js:22"
        },
        {
            "message": "Missing item type\nRemove all sheets from element and store for later use.",
            "line": " ..\\..\\polymer-dev\\src\\declaration\\styles.js:33"
        },
        {
            "message": "Missing item type\nTakes external stylesheets loaded in an <element> element and moves\ntheir content into a <style> element inside the <element>'s template.\nThe sheet is then removed from the <element>. This is done only so \nthat if the element is loaded in the main document, the sheet does\nnot become active.\nNote, ignores sheets with the attribute 'polymer-scope'.",
            "line": " ..\\..\\polymer-dev\\src\\declaration\\styles.js:52"
        },
        {
            "message": "Missing item type\nPromotes external stylesheets and <style> elements with the attribute \npolymer-scope='global' into global scope.\nThis is particularly useful for defining @keyframe rules which \ncurrently do not function in scoped or shadow style elements.\n(See wkb.ug/72462)",
            "line": " ..\\..\\polymer-dev\\src\\declaration\\styles.js:89"
        },
        {
            "message": "Missing item type\nInstalls external stylesheets and <style> elements with the attribute \npolymer-scope='controller' into the scope of element. This is intended\nto be a called during custom element construction. Note, this incurs a \nper instance cost and should be used sparingly.\n\nThe need for this type of styling should go away when the shadowDOM spec\naddresses these issues:\n\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21391\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21390\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21389",
            "line": " ..\\..\\polymer-dev\\src\\instance\\styles.js:19"
        },
        {
            "message": "Missing item type\nRemove class from old, add class to anew, if they exist",
            "line": " ..\\..\\polymer-dev\\src\\instance\\utils.js:57"
        },
        {
            "message": "Missing item type\nSplice Projection functions:\n\nA splice map is a representation of how a previous array of items\nwas transformed into a new array of items. Conceptually it is a list of\ntuples of\n\n  <index, removed, addedCount>\n\nwhich are kept in ascending index order of. The tuple represents that at\nthe |index|, |removed| sequence of items were removed, and counting forward\nfrom |index|, |addedCount| items were added.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1126"
        },
        {
            "message": "Missing item type\nLacking individual splice mutation information, the minimal set of\nsplices can be synthesized given the previous state and final state of an\narray. The basic approach is to calculate the edit distance matrix and\nchoose the shortest path through it.\n\nComplexity: O(l * p)\n  l: The length of the current array\n  p: The length of the old array",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1140"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1625"
        },
        {
            "message": "Missing item type\nCreates a generic wrapper constructor based on |object| and its\nconstructor.\nSometimes the constructor does not have an associated instance\n(CharacterData for example). In that case you can pass the constructor that\nyou want to map the object to using |opt_nativeConstructor|.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1654"
        },
        {
            "message": "Missing item type\nWraps a node in a WrapperNode. If there already exists a wrapper for the\n|node| that wrapper is returned instead.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1714"
        },
        {
            "message": "Missing item type\nUnwraps a wrapper and returns the node it is wrapping.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1729"
        },
        {
            "message": "Missing item type\nUnwraps object if it is a wrapper.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1741"
        },
        {
            "message": "Missing item type\nWraps object if it is not a wrapper.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1750"
        },
        {
            "message": "Missing item type\nOverrides the current wrapper (if any) for node.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1759"
        },
        {
            "message": "Missing item type\nForwards existing methods on the native object to the wrapper methods.\nThis does not wrap any of the arguments or the return value since the\nwrapper implementation already takes care of that.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:1787"
        },
        {
            "message": "Missing item type\nCreates a new Event wrapper or wraps an existin native Event object.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2204"
        },
        {
            "message": "Missing item type\nConstructs a new native event.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2339"
        },
        {
            "message": "Missing item type\nThis represents a wrapper for an EventTarget.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2399"
        },
        {
            "message": "Missing item type\nReturns a function that is to be used as a getter for `onfoo` properties.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2506"
        },
        {
            "message": "Missing item type\nReturns a function that is to be used as a setter for `onfoo` properties.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2519"
        },
        {
            "message": "Missing item type\nCollects nodes from a DocumentFragment or a Node for removal followed\nby an insertion.\n\nThis updates the internal pointers for node, previousNode and nextNode.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2641"
        },
        {
            "message": "Missing item type\nThis represents a wrapper of a native DOM node.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2770"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2785"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2791"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2797"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2803"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2809"
        },
        {
            "message": "Missing item type\nCalled after a node was added. Subclasses override this to invalidate\nthe renderer as needed.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2983"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:2998"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:3005"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:3011"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:3017"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:3023"
        },
        {
            "message": "Missing item type\nUseful for generating the accessor pair for a property that reflects an\nattribute.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:3380"
        },
        {
            "message": "Missing item type\nUpdates the fields of a wrapper to a snapshot of the logical DOM as needed.\nUp means parentNode\nSideways means previous and next sibling.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4022"
        },
        {
            "message": "Missing item type\nUpdates the fields of a wrapper to a snapshot of the logical DOM as needed.\nDown means first and last child",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4034"
        },
        {
            "message": "Missing item type\nVisits all nodes in the tree that fulfils the |predicate|. If the |visitor|\nfunction returns |false| the traversal is aborted.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4133"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4178"
        },
        {
            "message": "Missing item type\nReturns existing shadow renderer for a host or creates it if it is needed.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4233"
        },
        {
            "message": "Missing item type\nRenderNode is used as an in memory \"render tree\". When we render the\ncomposed tree we create a tree of RenderNodes, then we diff this against\nthe real DOM tree and make minimal changes as needed.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4264"
        },
        {
            "message": "Missing item type\nInvalidates the attributes used to keep track of which attributes may\ncause the renderer to be invalidated.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4454"
        },
        {
            "message": "Missing item type\nParses the selector and makes this renderer dependent on the attribute\nbeing used in the selector.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4462"
        },
        {
            "message": "Missing item type\nThis gets called when a node was added or removed to it.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:4616"
        },
        {
            "message": "Missing item type\nThis represents a <template> element.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:7130"
        },
        {
            "message": "Missing item type\nEnsures proper API and content model for template elements.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:7210"
        },
        {
            "message": "Missing item type\nConverts a style property name to a css property name. For example:\n\"WebkitUserSelect\" to \"-webkit-user-select\"",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:9513"
        },
        {
            "message": "Missing item type\nSchedules |dispatchCallback| to be called in the future.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10260"
        },
        {
            "message": "Missing item type\nThis function is used for the \"For each registered observer observer (with\nobserver's options as options) in target's list of registered observers,\nrun these substeps:\" and the \"For each ancestor ancestor of target, and for\neach registered observer observer (with options options) in ancestor's list\nof registered observers, run these substeps:\" part of the algorithms. The\n|options.subtree| is checked to ensure that the callback is called\ncorrectly.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10322"
        },
        {
            "message": "Missing item type\nThe class that maps to the DOM MutationObserver interface.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10357"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10445"
        },
        {
            "message": "Missing item type\nCreates a record without |oldValue| and caches it as |currentRecord| for\nlater use.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10477"
        },
        {
            "message": "Missing item type\nGets or creates a record with |oldValue| based in the |currentRecord|",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10487"
        },
        {
            "message": "Missing item type",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10504"
        },
        {
            "message": "Missing item type\nSelects which record, if any, to replace the last record in the queue.\nThis returns |null| if no record should be replaced.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10513"
        },
        {
            "message": "Missing item type\nClass used to represent a registered observer.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10533"
        },
        {
            "message": "Missing item type\nAdds a transient observer on node. The transient observer gets removed\nnext time we deliver the change records.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:10608"
        },
        {
            "message": "Missing item type\nThis is the constructor for new PointerEvents.\n\nNew Pointer Events must be given a type, and an optional dictionary of\ninitialization properties.\n\nDue to certain platform requirements, events returned from the constructor\nidentify as MouseEvents.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:11800"
        },
        {
            "message": "Missing item type\nThis module implements an ordered list of pointer states\nEach pointer object here has two properties:\n - id: the id of the pointer\n - event: the source event of the pointer, complete with positions\n\nThe ordering of the pointers is from oldest pointer to youngest pointer,\nwhich allows for multi-pointer gestures to not rely on the actual ids\nimported from the source events.\n\nAny operation that needs to store state information about pointers can hang\nobjects off of the pointer in the pointermap. This information will be\npreserved until the pointer is removed from the pointermap.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:11962"
        },
        {
            "message": "Missing item type\nThis module is for normalizing events. Mouse and Touch events will be\ncollected here, and fire PointerEvents that have the same semantics, no\nmatter the source.\nEvents fired:\n  - pointerdown: a pointing is added\n  - pointerup: a pointer is removed\n  - pointermove: a pointer is moved\n  - pointerover: a pointer crosses into an element\n  - pointerout: a pointer leaves an element\n  - pointercancel: a pointer will no longer generate events",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:12104"
        },
        {
            "message": "Missing item type\nAdd a new event source that will generate pointer events.\n\n`inSource` must contain an array of event names named `events`, and\nfunctions with the names specified in the `events` array.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:12125"
        },
        {
            "message": "Missing item type\nCreates a new Event of type `inType`, based on the information in\n`inEvent`.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:12235"
        },
        {
            "message": "Missing item type\nReturns a snapshot of inEvent, with writable properties.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:12257"
        },
        {
            "message": "Missing item type\nDispatches the event to its target.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:12305"
        },
        {
            "message": "Missing item type\nThis module uses Mutation Observers to dynamically adjust which nodes will\ngenerate Pointer Events.\n\nAll nodes that wish to generate Pointer Events must have the attribute\n`touch-action` set to `none`.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:12333"
        },
        {
            "message": "Missing item type\nThis module contains the handlers for native platform events.\nFrom here, the dispatcher is called to create unified pointer events.\nIncluded are touch events (v1), mouse events, and MSPointerEvents.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:12962"
        },
        {
            "message": "Missing item type\nRemove class from old, add class to anew, if they exist",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:14465"
        },
        {
            "message": "Missing item type\nInstalls external stylesheets and <style> elements with the attribute \npolymer-scope='controller' into the scope of element. This is intended\nto be a called during custom element construction. Note, this incurs a \nper instance cost and should be used sparingly.\n\nThe need for this type of styling should go away when the shadowDOM spec\naddresses these issues:\n\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21391\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21390\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21389",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:15252"
        },
        {
            "message": "Missing item type\nInstall external stylesheets loaded in <element> elements into the \nelement's template.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:15377"
        },
        {
            "message": "Missing item type\nRemove all sheets from element and store for later use.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:15388"
        },
        {
            "message": "Missing item type\nTakes external stylesheets loaded in an <element> element and moves\ntheir content into a <style> element inside the <element>'s template.\nThe sheet is then removed from the <element>. This is done only so \nthat if the element is loaded in the main document, the sheet does\nnot become active.\nNote, ignores sheets with the attribute 'polymer-scope'.",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:15407"
        },
        {
            "message": "Missing item type\nPromotes external stylesheets and <style> elements with the attribute \npolymer-scope='global' into global scope.\nThis is particularly useful for defining @keyframe rules which \ncurrently do not function in scoped or shadow style elements.\n(See wkb.ug/72462)",
            "line": " ..\\..\\polymer-dev\\polymer.concat.js:15444"
        },
        {
            "message": "Missing item type\nConverts a style property name to a css property name. For example:\n\"WebkitUserSelect\" to \"-webkit-user-select\"",
            "line": " ..\\..\\polymer-expressions\\src\\polymer-expressions.js:404"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\polymer-expressions\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nTODO:\n  - add easing to snap\n  - test delay\n  - multiple iterations for input animation\n  - test CustomEffect",
            "line": " ..\\..\\polymer-scrub\\polymer-scrub.html:3"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\..\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nInstall a fork of karma-chrome-launcher if on a Mac to launch\nChrome Canary with Harmony.",
            "line": " ..\\..\\tools\\tasks\\override-chrome-launcher.js:2"
        }
    ]
}